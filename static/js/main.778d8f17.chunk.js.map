{"version":3,"sources":["libs/api/abstractions/storage.ts","libs/api/databases/answers.db.ts","utils/helpers/format.helpers.ts","utils/helpers/generator.helpers.ts","utils/helpers/validation.helpers.ts","libs/api/databases/quiz.db.ts","libs/api/databases/users.db.ts","demo/constants.ts","service/token.service.ts","routes/AdminRoute.tsx","routes/UserRoute.tsx","components/atoms/utils.ts","components/atoms/Button/styles.ts","components/atoms/Button/index.tsx","components/atoms/Form/FormInput/styles.ts","components/atoms/Form/FormCheck/styles.ts","components/atoms/Form/FormCheck/index.tsx","components/atoms/Form/FormInput/index.tsx","libs/hooks/useForm.ts","libs/validations/question.validations.ts","components/organisms/Forms/RegisterForm.tsx","libs/validations/register.validations.ts","components/organisms/Forms/ReplyForm.tsx","libs/validations/reply.validations.ts","libs/validations/signin.validations.ts","components/organisms/Forms/QuestionForm.tsx","components/organisms/Forms/SigninForm.tsx","utils/constants/navItems.ts","components/organisms/Layouts/LeftNavbar.tsx","components/organisms/Layouts/AdminLayout.tsx","components/organisms/Layouts/Topbar.tsx","components/organisms/Layouts/UserLayout.tsx","libs/icons/Icon.tsx","libs/icons/index.ts","components/molecules/Button/IconButton.tsx","components/templates/GeneralUser/Dashboard.tsx","components/templates/UserSignin.tsx","routes/constants.ts","components/templates/Admin/Dashboard.tsx","components/templates/Admin/Quiz/AllQuizzes.tsx","components/templates/Admin/Quiz/AddQuiz.tsx","components/templates/Admin/Quiz/EditQuiz.tsx","components/templates/Admin/Quiz/SingleQuiz.tsx","components/templates/Admin/Member/AllMembers.tsx","components/templates/Admin/Member/AddMember.tsx","components/templates/GeneralUser/SingleQuiz.tsx","App.tsx","demo/importData.ts","reportWebVitals.ts","index.tsx"],"names":["DB","databaseName","this","key","value","localStorage","setItem","JSON","stringify","get","getItem","parse","result","includes","push","removeItem","userAnswers","quizID","userID","answers","filtered","answer","filter","getAnswers","answerDoc","set","getAnswersForUser","formatValidatorKey","val","replace","formatReadable","charAt","toUpperCase","slice","toLowerCase","IDGenerator","Date","now","toString","isEmailAddress","email","test","String","quiz","id","getAll","found","findOne","Object","assign","Error","remove","user","findAll","find","e","emailAddress","password","dummyQuizzes","title","dummyMembers","name","isAdmin","tokenService","token","AdminRoute","component","rest","getToken","render","props","React","createElement","to","pathname","UserRoute","getThemeColor","color","Wrapper","styled","button","size","css","block","variant","outline","pill","Button","children","defaultProps","FormGroup","div","FormLabel","label","srOnly","required","FormControl","input","invalid","FormFeedback","p","rounded","FormCheck","message","className","style","groupProps","FormInput","labelProps","controlProps","useForm","initialValues","initialErrors","validate","onCallback","useState","values","setValues","errors","setErrors","handleChange","target","type","errorsData","prevState","checked","handleSubmit","preventDefault","obj","isNullProperties","questionValidations","keys","length","trim","RegisterForm","history","useHistory","data","create","onSubmit","noValidate","placeholder","onChange","registerValidations","newKey","ReplyForm","correctAnswer","answersByID","createAnswer","map","i","replyValidations","signinValidations","QuestionForm","isEdit","useEffect","question","update","SigninForm","userData","singIn","setToken","navItems","slug","LeftNavbar","activeClassName","onClick","removeToken","AdminLayout","Topbar","backgroundColor","UserLayout","Icon","path","xmlns","viewBox","d","width","height","fill","IconButton","isCount","count","iconProps","Count","Btn","span","Badge","FormWrapper","routeList","exact","quizzes","quizCount","members","memberCount","setData","getQuizReplyCount","delete","handleDelete","colSpan","useParams","quizByID","quizDetails","getUserNameByID","getReplyCount","getQuizByID","App","start","setStart","importData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.778d8f17.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nexport class DB<T> {\r\n\tprivate databaseName: string;\r\n\r\n\tconstructor(databaseName: string) {\r\n\t\tthis.databaseName = databaseName;\r\n\t}\r\n\r\n\tprotected set(key: string, value: T) {\r\n\t\tlocalStorage.setItem(`${this.databaseName}_${key}`, JSON.stringify(value));\r\n\t\treturn this.get(key)!;\r\n\t}\r\n\r\n\tprotected get(key: string): T | null {\r\n\t\tconst value = localStorage.getItem(`${this.databaseName}_${key}`);\r\n\t\tif (!value) return null;\r\n\t\treturn JSON.parse(value);\r\n\t}\r\n\r\n\tprotected getAll(): T[] {\r\n\t\tconst result = [];\r\n\t\tfor (const key in localStorage) {\r\n\t\t\tif (key.includes(`${this.databaseName}_`)) {\r\n\t\t\t\tconst value = localStorage.getItem(key)!;\r\n\t\t\t\tresult.push(JSON.parse(value));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected remove(key: string) {\r\n\t\tlocalStorage.removeItem(`${this.databaseName}_${key}`);\r\n\t}\r\n}\r\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport { DB } from '../abstractions/storage';\r\n\r\ninterface Answer {\r\n\tanswer: string;\r\n\tuserID: string;\r\n}\r\n\r\nexport interface IQuizAnswer {\r\n\tquizID: string;\r\n\tanswer: Answer[];\r\n}\r\n\r\nclass UserAnswers extends DB<IQuizAnswer> {\r\n\tconstructor() {\r\n\t\tsuper('user_answers');\r\n\t}\r\n\r\n\t/**\r\n\t * ### Consumed By Admin\r\n\t * */\r\n\tgetAnswers(quizID: string) {\r\n\t\treturn this.get(quizID);\r\n\t}\r\n\r\n\t/**\r\n\t * ### Consumed By User\r\n\t * */\r\n\tgetAnswersForUser(quizID: string, userID: string): IQuizAnswer | null {\r\n\t\tconst answers = this.get(quizID);\r\n\t\tif (answers) {\r\n\t\t\tconst filtered = answers.answer.filter((answer) => answer.userID === userID);\r\n\t\t\treturn {\r\n\t\t\t\t...answers,\r\n\t\t\t\tanswer: filtered,\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * ### Consumed By User\r\n\t * */\r\n\tcreateAnswer(quizID: string, answer: Answer) {\r\n\t\tconst answers = this.getAnswers(quizID);\r\n\t\tif (!answers) {\r\n\t\t\tconst answerDoc: IQuizAnswer = { quizID, answer: [answer] };\r\n\t\t\tthis.set(quizID, answerDoc);\r\n\r\n\t\t\treturn this.getAnswersForUser(quizID, answer.userID)!;\r\n\t\t}\r\n\t\tanswers.answer.push(answer);\r\n\t\tthis.set(quizID, answers);\r\n\t\treturn this.getAnswersForUser(quizID, answer.userID)!;\r\n\t}\r\n}\r\n\r\nexport const userAnswers = new UserAnswers();\r\n","export const formatReadable = (value: string): string => {\r\n\treturn value.replace(/([A-Z])/g, ' $1');\r\n};\r\n\r\nexport const formatValidatorKey = (value: string): string => {\r\n\tconst val = formatReadable(value);\r\n\treturn val.charAt(0).toUpperCase() + val.slice(1).toLowerCase();\r\n};\r\n","export const IDGenerator = () => Date.now().toString();\n","/**\r\n * Check whether is number or string\r\n * @param value\r\n * @returns\r\n */\r\nexport const isNumber = (value: string): boolean => {\r\n\treturn /^-?[\\d.]+(?:e-?\\d+)?$/.test(value);\r\n};\r\n\r\n/**\r\n * Check phone number is valid or NOT\r\n * @param number - pass phone number\r\n */\r\nexport const isPhoneNumber = (number: string): boolean => {\r\n\tconst regex = /^((01){1}[3-9]{1}\\d{8})$/;\r\n\treturn regex.test(number);\r\n};\r\n\r\n/**\r\n * Check email address is valid or NOT\r\n * @param email\r\n * @returns\r\n */\r\nexport const isEmailAddress = (email: string): boolean => {\r\n\tconst regex = /^([\\w\\.\\-]+)@([\\w\\-]+)((\\.(\\w){2,3})+)$/; // eslint-disable-line\r\n\treturn regex.test(String(email).toLowerCase());\r\n};\r\n\r\n/**\r\n * Check if all properties is NULL\r\n * @param obj\r\n * @returns\r\n */\r\nexport const isNullProperties = (obj: Record<string, any>): boolean => {\r\n\tfor (const key in obj) {\r\n\t\tif (obj[key] !== null && obj[key] !== '') return false;\r\n\t}\r\n\treturn true;\r\n};\r\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport { IDGenerator } from 'utils/helpers';\r\nimport { DB } from '../abstractions/storage';\r\n\r\nexport interface IQuiz {\r\n\tid: string;\r\n\ttitle: string;\r\n\tdescription?: string;\r\n\tanswer: string;\r\n}\r\n\r\nclass QuizDB extends DB<IQuiz> {\r\n\tconstructor() {\r\n\t\tsuper('quiz');\r\n\t}\r\n\r\n\tfindOne(id: string) {\r\n\t\treturn this.get(id);\r\n\t}\r\n\r\n\tfindAll() {\r\n\t\treturn this.getAll();\r\n\t}\r\n\r\n\tcreate(quiz: Omit<IQuiz, 'id'>) {\r\n\t\tconst id = IDGenerator();\r\n\t\treturn this.set(id, { ...quiz, id });\r\n\t}\r\n\r\n\tupdate(id: string, value: Partial<Omit<IQuiz, 'id'>>) {\r\n\t\tconst found = this.findOne(id);\r\n\t\tif (found) {\r\n\t\t\tthis.set(id, Object.assign(found, value));\r\n\t\t\treturn this.findOne(id)!;\r\n\t\t}\r\n\t\tthrow new Error('Quiz Not Found');\r\n\t}\r\n\r\n\tdelete(id: string) {\r\n\t\tthis.remove(id);\r\n\t}\r\n}\r\n\r\n/**\r\n * ### Used By Admin\r\n **/\r\nexport const quiz = new QuizDB();\r\n","import { IDGenerator } from 'utils/helpers';\r\nimport { DB } from '../abstractions/storage';\r\n\r\nexport interface IUser {\r\n\tid: string;\r\n\tname: string;\r\n\temailAddress: string;\r\n\tpassword: string;\r\n\tisAdmin: boolean;\r\n\t// avatarURL: string;\r\n}\r\n\r\nexport class UsersDB extends DB<IUser> {\r\n\tconstructor() {\r\n\t\tsuper('users');\r\n\t}\r\n\r\n\tfindAll() {\r\n\t\treturn this.getAll();\r\n\t}\r\n\r\n\tfindOne(id: string) {\r\n\t\treturn this.get(id);\r\n\t}\r\n\r\n\tcreate(user: Omit<IUser, 'id'>) {\r\n\t\tconst id = IDGenerator();\r\n\t\tconst users = this.findAll();\r\n\t\tconst isRegistered = users.find((e) => e.emailAddress === user.emailAddress);\r\n\t\tif (isRegistered) return null;\r\n\t\treturn this.set(id, { ...user, id });\r\n\t}\r\n\r\n\tsingIn(emailAddress: string, password: string) {\r\n\t\tconst users = this.findAll();\r\n\t\tconst user = users.find((e) => e.emailAddress === emailAddress && e.password === password);\r\n\t\tif (!user) return null;\r\n\t\tconst { password: omitPassword, ...rest } = user;\r\n\t\treturn rest;\r\n\t}\r\n}\r\n\r\nexport const user = new UsersDB();\r\n","import { IQuiz, IUser } from 'libs/api';\n\nexport const dummyQuizzes: Omit<IQuiz, 'id'>[] = [\n\t{\n\t\ttitle: 'What is the capital of New Zealand?',\n\t\tanswer: 'Wellington',\n\t},\n\t{\n\t\ttitle: 'How many permanent teeth does a dog have?',\n\t\tanswer: '42',\n\t},\n\t{\n\t\ttitle: 'What is the name of the largest ocean on earth?',\n\t\tanswer: 'Pacific Ocean',\n\t},\n\t{\n\t\ttitle: 'What is the name of the biggest technology company in South Korea?',\n\t\tanswer: 'Samsung',\n\t},\n\t{\n\t\ttitle: 'What is the currency of Denmark?',\n\t\tanswer: 'Krone',\n\t},\n\t{\n\t\ttitle: 'What is the smallest planet in our solar system?',\n\t\tanswer: 'Mercury',\n\t},\n\t{\n\t\ttitle: 'What is the most sold flavour of Walker’s crisps?',\n\t\tanswer: 'Cheese and Onion',\n\t},\n\t{\n\t\ttitle: 'How long is an Olympic swimming pool (in meters)?',\n\t\tanswer: '50 meters',\n\t},\n];\n\nexport const dummyMembers: Omit<IUser, 'id'>[] = [\n\t{\n\t\tname: 'John Doe',\n\t\temailAddress: 'john@gmail.com',\n\t\tpassword: '12345678',\n\t\tisAdmin: true,\n\t},\n\t{\n\t\tname: 'Tara Black',\n\t\temailAddress: 'tara@gmail.com',\n\t\tpassword: '12345678',\n\t\tisAdmin: false,\n\t},\n\t{\n\t\tname: 'Mary Hart',\n\t\temailAddress: 'mary@gmail.com',\n\t\tpassword: '12345678',\n\t\tisAdmin: false,\n\t},\n];\n","import { IUser } from 'libs/api';\n\nexport type IUserToken = Omit<IUser, 'password'>;\n\nclass TokenService {\n\tgetToken(): IUserToken | null {\n\t\tconst token = localStorage.getItem('token');\n\t\tif (!token) return null;\n\t\treturn JSON.parse(token);\n\t}\n\n\tsetToken(value: IUserToken) {\n\t\tlocalStorage.setItem('token', JSON.stringify(value));\n\t}\n\n\tremoveToken() {\n\t\tlocalStorage.removeItem('token');\n\t}\n}\n\nexport const tokenService = new TokenService();\n","import React, { FC } from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport { tokenService } from 'service';\n\nexport const AdminRoute: FC<PrivateRouteProps> = ({ component, ...rest }) => {\n\tconst token = tokenService.getToken();\n\n\tconst routeComponent = (props: any) => {\n\t\tif (token?.id && token?.isAdmin) {\n\t\t\treturn React.createElement(component, props);\n\t\t} else {\n\t\t\treturn <Redirect to={{ pathname: '/' }} />;\n\t\t}\n\t};\n\n\treturn <Route {...rest} render={routeComponent} />;\n};\n\ntype PrivateRouteProps = {\n\tcomponent: any;\n} & RouteProps;\n","import React, { FC } from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport { tokenService } from 'service';\n\nexport const UserRoute: FC<PrivateRouteProps> = ({ component, ...rest }) => {\n\tconst token = tokenService.getToken();\n\n\tconst routeComponent = (props: any) => {\n\t\tif (token?.id && !token?.isAdmin) {\n\t\t\treturn React.createElement(component, props);\n\t\t} else {\n\t\t\treturn <Redirect to={{ pathname: '/' }} />;\n\t\t}\n\t};\n\n\treturn <Route {...rest} render={routeComponent} />;\n};\n\ntype PrivateRouteProps = {\n\tcomponent: any;\n} & RouteProps;\n","import { Colors } from './interfaces';\r\n\r\nexport const getThemeColor = (color: Colors): string => `var(--bs-${color})`;\r\n","/* eslint-disable indent */\r\nimport styled, { css } from 'styled-components';\r\nimport { ButtonProps } from '.';\r\nimport { getThemeColor } from '../utils';\r\n\r\nexport const Wrapper = styled.button<ButtonProps>`\r\n\ttext-align: center;\r\n\tborder: 1px solid transparent;\r\n\t${({ size }) => {\r\n\t\tswitch (size) {\r\n\t\t\tcase 'sm':\r\n\t\t\t\treturn css`\r\n\t\t\t\t\tpadding: 0.156rem 0.75rem;\r\n\t\t\t\t`;\r\n\r\n\t\t\tcase 'lg':\r\n\t\t\t\treturn css`\r\n\t\t\t\t\tpadding: 0.688rem 0.75rem;\r\n\t\t\t\t`;\r\n\r\n\t\t\tcase 'xl':\r\n\t\t\t\treturn css`\r\n\t\t\t\t\tpadding: 0.907rem 0.75rem;\r\n\t\t\t\t`;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn css`\r\n\t\t\t\t\tpadding: 0.532rem 0.75rem;\r\n\t\t\t\t`;\r\n\t\t}\r\n\t}}\r\n\t${({ block }) => {\r\n\t\tif (block) {\r\n\t\t\treturn css`\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t`;\r\n\t\t} else {\r\n\t\t\treturn css`\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t`;\r\n\t\t}\r\n\t}};\r\n\t${({ variant, outline }) => {\r\n\t\tswitch (variant) {\r\n\t\t\tcase 'link':\r\n\t\t\t\treturn css`\r\n\t\t\t\t\tcolor: ${getThemeColor('primary')};\r\n\t\t\t\t\tborder-color: transparent;\r\n\t\t\t\t\tbackground-color: transparent;\r\n\t\t\t\t`;\r\n\r\n\t\t\tcase 'light':\r\n\t\t\t\treturn css`\r\n\t\t\t\t\tcolor: ${getThemeColor('dark')};\r\n\t\t\t\t`;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tif (outline) {\r\n\t\t\t\t\treturn css`\r\n\t\t\t\t\t\tcolor: ${getThemeColor(variant!)};\r\n\t\t\t\t\t\tborder-color: ${getThemeColor(variant!)};\r\n\t\t\t\t\t\tbackground-color: transparent;\r\n\t\t\t\t\t`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn css`\r\n\t\t\t\t\t\tcolor: ${getThemeColor('white')};\r\n\t\t\t\t\t\tborder-color: ${getThemeColor(variant!)};\r\n\t\t\t\t\t\tbackground-color: ${getThemeColor(variant!)};\r\n\r\n\t\t\t\t\t\t&:hover {\r\n\t\t\t\t\t\t\topacity: 0.95;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t`;\r\n\t\t\t\t}\r\n\t\t}\r\n\t}};\r\n\tborder-radius: ${({ pill }) => (pill ? '50rem' : '0.25rem')};\r\n\ttransition: color 0.2s ease-in-out, background-color 0.2s ease-in-out, border-color 0.2s ease-in-out,\r\n\t\topacity 0.2s ease-in-out;\r\n\r\n\t&:hover {\r\n\t\t${({ variant, outline }) => {\r\n\t\t\tif (outline && variant !== 'link') {\r\n\t\t\t\treturn css`\r\n\t\t\t\t\tcolor: ${getThemeColor('white')};\r\n\t\t\t\t\tbackground-color: ${getThemeColor(variant!)};\r\n\t\t\t\t`;\r\n\t\t\t} else {\r\n\t\t\t\treturn css`\r\n\t\t\t\t\topacity: 0.95;\r\n\t\t\t\t`;\r\n\t\t\t}\r\n\t\t}}\r\n\t}\r\n\r\n\t&:disabled {\r\n\t\topacity: 0.65;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n`;\r\n","import { ButtonHTMLAttributes, FC } from 'react';\r\nimport { ButtonVariant, ElementBorders, ElementSize } from '../interfaces';\r\nimport { Wrapper } from './styles';\r\n\r\nexport const Button: FC<ButtonProps> = ({ children, ...rest }) => <Wrapper {...rest}>{children}</Wrapper>;\r\n\r\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement>, Pick<ElementBorders, 'pill'> {\r\n\tvariant?: ButtonVariant;\r\n\tblock?: boolean;\r\n\toutline?: boolean;\r\n\tsize?: Exclude<ElementSize, 'md'>;\r\n}\r\n\r\nButton.defaultProps = {\r\n\tvariant: 'primary',\r\n\tpill: false,\r\n\tblock: false,\r\n\toutline: false,\r\n};\r\n","/* eslint-disable indent */\r\nimport styled, { css } from 'styled-components';\r\nimport { FormInputProps } from '.';\r\n\r\ninterface FormControlProps extends Pick<FormInputProps, 'pill' | 'required'> {\r\n\tinvalid?: boolean;\r\n}\r\n\r\nexport const FormGroup = styled.div`\r\n\tdisplay: block;\r\n\tmargin-bottom: 1rem;\r\n`;\r\n\r\nexport const FormLabel = styled.label<FormInputProps>`\r\n\tdisplay: inline-block;\r\n\tmargin-bottom: 0.25rem;\r\n\r\n\t${({ srOnly }) => {\r\n\t\tif (srOnly) {\r\n\t\t\treturn css`\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\twidth: 1px;\r\n\t\t\t\theight: 1px;\r\n\t\t\t\tpadding: 0;\r\n\t\t\t\toverflow: hidden;\r\n\t\t\t\tclip: rect(0, 0, 0, 0);\r\n\t\t\t\twhite-space: nowrap;\r\n\t\t\t\t-webkit-clip-path: inset(50%);\r\n\t\t\t\tclip-path: inset(50%);\r\n\t\t\t\tborder: 0;\r\n\t\t\t`;\r\n\t\t}\r\n\t}}\r\n\r\n\t&:after {\r\n\t\t${({ required }) => {\r\n\t\t\tif (required) {\r\n\t\t\t\treturn css`\r\n\t\t\t\t\tcontent: ' *';\r\n\t\t\t\t\tcolor: var(--bs-danger);\r\n\t\t\t\t`;\r\n\t\t\t}\r\n\t\t}}\r\n\t}\r\n`;\r\n\r\nexport const FormControl = styled.input<FormControlProps>`\r\n\twidth: 100%;\r\n\tdisplay: block;\r\n\tpadding: 0.532rem 1rem;\r\n\tborder: 1px solid var(--bs-border);\r\n\t${({ pill }) => {\r\n\t\tif (pill) {\r\n\t\t\treturn css`\r\n\t\t\t\tborder-radius: 50rem;\r\n\t\t\t`;\r\n\t\t} else {\r\n\t\t\treturn css`\r\n\t\t\t\tborder-radius: 0.25rem;\r\n\t\t\t`;\r\n\t\t}\r\n\t}}\r\n\ttransition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n\r\n\t&:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: var(--bs-primary);\r\n\t\tbox-shadow: 0 0 0 0.2rem rgba(0, 181, 91, 0.25);\r\n\t}\r\n\r\n\t&:disabled {\r\n\t\tpointer-events: none;\r\n\t\tfilter: none;\r\n\t\topacity: 0.5;\r\n\t}\r\n\r\n\t${({ invalid }) => {\r\n\t\tif (invalid) {\r\n\t\t\treturn css`\r\n\t\t\t\tborder-color: var(--bs-danger);\r\n\t\t\t\tbox-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);\r\n\r\n\t\t\t\t&:focus {\r\n\t\t\t\t\tborder-color: var(--bs-danger);\r\n\t\t\t\t\tbox-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);\r\n\t\t\t\t}\r\n\t\t\t`;\r\n\t\t}\r\n\t}}\r\n`;\r\n\r\nexport const FormFeedback = styled.p`\r\n\tcolor: var(--bs-danger);\r\n\tmargin-bottom: 0;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { FormCheckProps } from '.';\r\n\r\nexport const FormGroup = styled.div`\r\n\tdisplay: block;\r\n\tmin-height: 1.5rem;\r\n\tpadding-left: 1.5rem;\r\n\tmargin-bottom: 1rem;\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n\tdisplay: inline-block;\r\n\tmargin-bottom: 0;\r\n`;\r\n\r\nexport const FormControl = styled.input<Pick<FormCheckProps, 'rounded'>>`\r\n\tcursor: pointer;\r\n\twidth: 1rem;\r\n\theight: 1rem;\r\n\tfloat: left;\r\n\tmargin-top: 0.25rem;\r\n\tmargin-left: -1.5em;\r\n\tappearance: none;\r\n\tvertical-align: top;\r\n\tbackground-color: var(--bs-white);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: contain;\r\n\tborder: 1px solid rgba(0, 0, 0, 0.25);\r\n\tbackground-color: var(--bs-white);\r\n\tborder-radius: ${({ rounded }) => (rounded ? '0.25rem' : '100%')};\r\n\r\n\t&:checked {\r\n\t\t&[type='checkbox'],\r\n\t\t&[type='radio'] {\r\n\t\t\tborder-color: var(--bs-primary);\r\n\t\t\tbackground-color: var(--bs-primary);\r\n\t\t\tbackground-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10l3 3l6-6'/%3e%3c/svg%3e\");\r\n\t\t}\r\n\r\n\t\t&[type='radio'] {\r\n\t\t\tbackground-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='%23fff'/%3e%3c/svg%3e\");\r\n\t\t}\r\n\t}\r\n\r\n\t&:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: var(--bs-primary);\r\n\t\tbox-shadow: 0 0 0 0.2rem rgba(0, 181, 91, 0.25);\r\n\t}\r\n\r\n\t&:disabled {\r\n\t\tpointer-events: none;\r\n\t\tfilter: none;\r\n\t\topacity: 0.5;\r\n\r\n\t\t& ~ ${FormLabel} {\r\n\t\t\topacity: 0.5;\r\n\t\t}\r\n\t}\r\n`;\r\n","import { FC, InputHTMLAttributes, ReactNode } from 'react';\r\nimport { ElementBorders } from '../../interfaces';\r\nimport { FormFeedback } from '../FormInput/styles';\r\nimport { FormControl, FormGroup, FormLabel } from './styles';\r\n\r\nexport const FormCheck: FC<FormCheckProps> = ({ label, message, className, style, ...rest }) => {\r\n\tconst groupProps = { className, style };\r\n\r\n\treturn (\r\n\t\t<FormGroup {...groupProps}>\r\n\t\t\t<FormControl {...rest} />\r\n\t\t\t<FormLabel>{label}</FormLabel>\r\n\t\t\t{rest.required && <FormFeedback>{message}</FormFeedback>}\r\n\t\t</FormGroup>\r\n\t);\r\n};\r\n\r\nexport interface FormCheckProps extends InputHTMLAttributes<HTMLInputElement>, Pick<ElementBorders, 'rounded'> {\r\n\ttype: 'checkbox' | 'radio';\r\n\tlabel?: ReactNode;\r\n\tmessage?: string;\r\n}\r\n\r\nFormCheck.defaultProps = {\r\n\trounded: false,\r\n\tlabel: '',\r\n};\r\n","import { ElementType, FC, InputHTMLAttributes, TextareaHTMLAttributes } from 'react';\r\nimport { ElementBorders } from '../../interfaces';\r\nimport { FormControl, FormFeedback, FormGroup, FormLabel } from './styles';\r\n\r\nexport const FormInput: FC<FormInputProps> = (props) => {\r\n\tconst { label, srOnly, message, className, style, required, ...rest } = props;\r\n\tconst groupProps = { className, style };\r\n\tconst labelProps = { required, srOnly, children: label };\r\n\tconst controlProps = { invalid: !!(required && message), required, ...rest };\r\n\r\n\treturn (\r\n\t\t<FormGroup {...groupProps}>\r\n\t\t\t<FormLabel {...labelProps} />\r\n\t\t\t<FormControl {...controlProps} />\r\n\t\t\t{required && <FormFeedback>{message}</FormFeedback>}\r\n\t\t</FormGroup>\r\n\t);\r\n};\r\n\r\nexport interface FormInputProps\r\n\textends InputHTMLAttributes<HTMLInputElement>,\r\n\t\tPick<TextareaHTMLAttributes<HTMLTextAreaElement>, 'cols' | 'rows'>,\r\n\t\tPick<ElementBorders, 'pill'> {\r\n\tas?: ElementType;\r\n\tlabel?: string;\r\n\tsrOnly?: boolean;\r\n\tmessage?: string | null;\r\n}\r\n\r\nFormInput.defaultProps = {\r\n\tsrOnly: false,\r\n};\r\n","import { ChangeEvent, Dispatch, FormEvent, SetStateAction, useState } from 'react';\r\nimport { isNullProperties } from 'utils/helpers';\r\n\r\nexport const useForm = <T, K>(props: PropsType<T, K>): ReturnType<T, K> => {\r\n\tconst { initialValues, initialErrors, validate, onCallback } = props;\r\n\tconst [values, setValues] = useState<T>(initialValues);\r\n\tconst [errors, setErrors] = useState<K>(initialErrors);\r\n\r\n\t/**\r\n\t * Change event handler for `HTMLInputElement` `HTMLSelectElement` `HTMLTextAreaElement`\r\n\t * @param e\r\n\t */\r\n\tconst handleChange = (e: ChangeEvent<FormElement>) => {\r\n\t\tconst { name, type, value } = e.target;\r\n\t\tconst errorsData = validate({ [name]: value } as any);\r\n\t\tsetErrors((prevState) => ({ ...prevState, ...errorsData }));\r\n\t\tif (type === 'checkbox') {\r\n\t\t\tconst { checked } = e.target as HTMLInputElement;\r\n\t\t\tsetValues((prevState) => ({ ...prevState, [name]: checked }));\r\n\t\t} else {\r\n\t\t\tsetValues((prevState) => ({ ...prevState, [name]: value }));\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Form event submit handler `Form`\r\n\t * @param e\r\n\t */\r\n\tconst handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n\t\te.preventDefault();\r\n\t\tconst errorsData = validate(values);\r\n\t\tsetErrors((prevState) => ({ ...prevState, ...errorsData }));\r\n\t\tif (isNullProperties(errorsData)) onCallback(values);\r\n\t};\r\n\r\n\treturn {\r\n\t\tvalues,\r\n\t\terrors,\r\n\t\tsetValues,\r\n\t\tsetErrors,\r\n\t\thandleChange,\r\n\t\thandleSubmit,\r\n\t};\r\n};\r\n\r\ntype PropsType<T, K> = {\r\n\tinitialValues: T;\r\n\tinitialErrors: K;\r\n\tvalidate: (values: Partial<T>) => Partial<K>;\r\n\tonCallback: (values: T) => void;\r\n};\r\n\r\ntype ReturnType<T, K> = {\r\n\tvalues: T;\r\n\terrors: K;\r\n\tsetValues: Dispatch<SetStateAction<T>>;\r\n\tsetErrors: Dispatch<SetStateAction<K>>;\r\n\thandleChange: (e: ChangeEvent<FormElement>) => void;\r\n\thandleSubmit: (e: FormEvent<HTMLFormElement>) => void;\r\n};\r\n\r\ntype FormElement = HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n","import { initialErrors, initialValues } from 'components/organisms/Forms/QuestionForm';\nimport { formatValidatorKey } from 'utils/helpers';\n\nexport const questionValidations = (values: Partial<typeof initialValues>): Partial<typeof initialErrors> => {\n\tconst errors: Partial<typeof initialErrors> = {};\n\n\tif (values && Object.keys(values).length > 0) {\n\t\tlet key: keyof typeof values;\n\t\tfor (key in values) {\n\t\t\tconst value = values[key]?.trim();\n\n\t\t\tif (key in initialErrors) {\n\t\t\t\tif (!value) {\n\t\t\t\t\terrors[key] = `${formatValidatorKey(key)} is required`;\n\t\t\t\t} else {\n\t\t\t\t\terrors[key] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn errors;\n};\n","import { Button, FormCheck, FormInput } from 'components/atoms';\nimport { user } from 'libs/api';\nimport { useForm } from 'libs/hooks';\nimport { registerValidations as validate } from 'libs/validations';\nimport { FC } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport const RegisterForm: FC = () => {\n\tconst history = useHistory();\n\n\tconst onCallback = (data: typeof initialValues) => {\n\t\tconst userData = user.create(data);\n\t\tif (userData) {\n\t\t\thistory.push('/admin/member/all');\n\t\t} else {\n\t\t\tsetErrors((prevState) => ({ ...prevState, emailAddress: 'Member already registed with this email' }));\n\t\t}\n\t};\n\n\tconst { values, errors, setErrors, handleChange, handleSubmit } = useForm({\n\t\tinitialValues,\n\t\tinitialErrors,\n\t\tvalidate,\n\t\tonCallback,\n\t});\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} noValidate>\n\t\t\t<FormInput\n\t\t\t\tpill\n\t\t\t\tlabel=\"Name\"\n\t\t\t\tname=\"name\"\n\t\t\t\tplaceholder=\"Full name\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={values.name}\n\t\t\t\tmessage={errors.name}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<FormInput\n\t\t\t\tpill\n\t\t\t\tlabel=\"Email\"\n\t\t\t\tname=\"emailAddress\"\n\t\t\t\tplaceholder=\"mail@website.com\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={values.emailAddress}\n\t\t\t\tmessage={errors.emailAddress}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<FormInput\n\t\t\t\tpill\n\t\t\t\tlabel=\"Password\"\n\t\t\t\ttype=\"password\"\n\t\t\t\tname=\"password\"\n\t\t\t\tplaceholder=\"Min. 8 character\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={values.password}\n\t\t\t\tmessage={errors.password}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<FormCheck\n\t\t\t\tlabel=\"Mark as admin\"\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tname=\"isAdmin\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tchecked={values.isAdmin}\n\t\t\t/>\n\t\t\t<Button pill variant=\"success\" type=\"submit\">\n\t\t\t\tAdd Member\n\t\t\t</Button>\n\t\t</form>\n\t);\n};\n\nexport const initialValues = { name: '', emailAddress: '', password: '', isAdmin: false };\nexport const initialErrors: Record<keyof Omit<typeof initialValues, 'isAdmin'>, string | null> = {\n\tname: null,\n\temailAddress: null,\n\tpassword: null,\n};\n","/* eslint-disable indent */\nimport { initialErrors, initialValues } from 'components/organisms/Forms/RegisterForm';\nimport { formatValidatorKey, isEmailAddress } from 'utils/helpers';\n\nexport const registerValidations = (values: Partial<typeof initialValues>): Partial<typeof initialErrors> => {\n\tconst errors: Partial<typeof initialErrors> = {};\n\n\tif (values && Object.keys(values).length > 0) {\n\t\tlet key: keyof typeof values;\n\t\tfor (key in values) {\n\t\t\tif (key in initialErrors) {\n\t\t\t\tconst newKey = key as keyof typeof initialErrors;\n\t\t\t\tconst value = (values[key] as typeof initialValues[keyof typeof initialErrors])?.trim();\n\n\t\t\t\tswitch (newKey) {\n\t\t\t\t\tcase 'emailAddress':\n\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\terrors['emailAddress'] = 'Email address is required';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (!isEmailAddress(value)) {\n\t\t\t\t\t\t\t\terrors['emailAddress'] = 'Email address is invalid';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\terrors['emailAddress'] = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'password':\n\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\terrors['password'] = 'Password is required';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (value?.length < 8) {\n\t\t\t\t\t\t\t\terrors['password'] = 'Password should be minimum 8 characters';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\terrors['password'] = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\terrors[newKey] = `${formatValidatorKey(key)} is required`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\terrors[newKey] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn errors;\n};\n","import { Button, FormInput } from 'components/atoms';\nimport { IQuiz, userAnswers } from 'libs/api';\nimport { useForm } from 'libs/hooks';\nimport { replyValidations as validate } from 'libs/validations';\nimport { FC, Fragment } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { tokenService } from 'service';\n\nexport const ReplyForm: FC<ReplyFormProps> = (props) => {\n\tconst { id, title, answer: correctAnswer } = props;\n\tconst { id: userID } = tokenService.getToken()!;\n\tconst history = useHistory();\n\n\tconst answersByID = userAnswers.getAnswersForUser(id, userID);\n\n\tconst onCallback = (data: typeof initialValues) => {\n\t\tuserAnswers.createAnswer(id, { answer: data.answer, userID });\n\t\thistory.push('/user/dashboard');\n\t};\n\n\tconst { values, errors, handleChange, handleSubmit } = useForm({\n\t\tinitialValues,\n\t\tinitialErrors,\n\t\tvalidate,\n\t\tonCallback,\n\t});\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} noValidate>\n\t\t\t<h4>{title}</h4>\n\t\t\t{answersByID && answersByID?.answer?.length > 0 && (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<p className=\"text-secondary mb-0\">Previous answer(s):</p>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{answersByID.answer.map(({ answer }, i) => (\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tanswer.trim().toLowerCase() === correctAnswer.trim().toLowerCase()\n\t\t\t\t\t\t\t\t\t\t? 'text-success fw-bold'\n\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{answer}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</Fragment>\n\t\t\t)}\n\t\t\t<FormInput\n\t\t\t\tpill\n\t\t\t\tlabel=\"Answer\"\n\t\t\t\tname=\"answer\"\n\t\t\t\tplaceholder=\"Add your answer\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={values.answer}\n\t\t\t\tmessage={errors.answer}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<Button pill variant=\"success\" type=\"submit\">\n\t\t\t\tAdd Reply\n\t\t\t</Button>\n\t\t</form>\n\t);\n};\n\nexport const initialValues = { answer: '' };\nexport const initialErrors: Record<keyof typeof initialValues, string | null> = { answer: null };\n\nexport type ReplyFormProps = IQuiz;\n","import { initialErrors, initialValues } from 'components/organisms/Forms/ReplyForm';\nimport { formatValidatorKey } from 'utils/helpers';\n\nexport const replyValidations = (values: Partial<typeof initialValues>): Partial<typeof initialErrors> => {\n\tconst errors: Partial<typeof initialErrors> = {};\n\n\tif (values && Object.keys(values).length > 0) {\n\t\tlet key: keyof typeof values;\n\t\tfor (key in values) {\n\t\t\tconst value = values[key]?.trim();\n\n\t\t\tif (key in initialErrors) {\n\t\t\t\tif (!value) {\n\t\t\t\t\terrors[key] = `${formatValidatorKey(key)} is required`;\n\t\t\t\t} else {\n\t\t\t\t\terrors[key] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn errors;\n};\n","/* eslint-disable indent */\nimport { initialErrors, initialValues } from 'components/organisms/Forms/SigninForm';\nimport { isEmailAddress } from 'utils/helpers';\n\nexport const signinValidations = (values: Partial<typeof initialValues>): Partial<typeof initialErrors> => {\n\tconst errors: Partial<typeof initialErrors> = {};\n\n\tif (values && Object.keys(values).length > 0) {\n\t\tlet key: keyof typeof values;\n\t\tfor (key in values) {\n\t\t\tconst value = values[key]?.trim();\n\n\t\t\tswitch (key) {\n\t\t\t\tcase 'emailAddress':\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\terrors['emailAddress'] = 'Email address is required';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!isEmailAddress(value)) {\n\t\t\t\t\t\t\terrors['emailAddress'] = 'Email address is invalid';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\terrors['emailAddress'] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'password':\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\terrors['password'] = 'Password is required';\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors['password'] = null;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn errors;\n};\n","import { Button, FormInput } from 'components/atoms';\nimport { IQuiz, quiz } from 'libs/api';\nimport { useForm } from 'libs/hooks';\nimport { questionValidations as validate } from 'libs/validations';\nimport { FC, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport const QuestionForm: FC<QuestionFormProps> = ({ isEdit, id, ...rest }) => {\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tlet key: keyof Pick<QuestionFormProps, 'title' | 'answer'>;\n\t\tfor (key in rest as Pick<QuestionFormProps, 'title' | 'answer'>) {\n\t\t\tconst value = rest[key] as string;\n\n\t\t\tswitch (key) {\n\t\t\t\tcase 'title':\n\t\t\t\t\tsetValues((prevState) => ({ ...prevState, question: value }));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'answer':\n\t\t\t\t\tsetValues((prevState) => ({ ...prevState, answer: value }));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst onCallback = (data: typeof initialValues) => {\n\t\tif (isEdit && id) {\n\t\t\tquiz.update(id, { title: data.question, answer: data.answer });\n\t\t\thistory.push('/admin/quiz/all');\n\t\t} else {\n\t\t\tquiz.create({ title: data.question, answer: data.answer });\n\t\t\thistory.push('/admin/quiz/all');\n\t\t}\n\t};\n\n\tconst { values, errors, setValues, handleChange, handleSubmit } = useForm({\n\t\tinitialValues,\n\t\tinitialErrors,\n\t\tvalidate,\n\t\tonCallback,\n\t});\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} noValidate>\n\t\t\t<FormInput\n\t\t\t\tpill\n\t\t\t\tlabel=\"Question\"\n\t\t\t\tname=\"question\"\n\t\t\t\tplaceholder=\"Type your question\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={values.question}\n\t\t\t\tmessage={errors.question}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<FormInput\n\t\t\t\tpill\n\t\t\t\tlabel=\"Answer\"\n\t\t\t\tname=\"answer\"\n\t\t\t\tplaceholder=\"Add your answer\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={values.answer}\n\t\t\t\tmessage={errors.answer}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<Button pill variant=\"success\" type=\"submit\">\n\t\t\t\t{isEdit ? 'Update Quiz' : 'Add Quiz'}\n\t\t\t</Button>\n\t\t</form>\n\t);\n};\n\nexport const initialValues = { question: '', answer: '' };\nexport const initialErrors: Record<keyof typeof initialValues, string | null> = { question: null, answer: null };\n\nexport type QuestionFormProps = {\n\tisEdit?: boolean;\n} & Partial<IQuiz>;\n","import { Button, FormInput } from 'components/atoms';\nimport { user } from 'libs/api';\nimport { useForm } from 'libs/hooks';\nimport { signinValidations as validate } from 'libs/validations';\nimport { FC } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { tokenService } from 'service';\n\nexport const SigninForm: FC = () => {\n\tconst history = useHistory();\n\n\tconst onCallback = (data: typeof initialValues) => {\n\t\tconst { emailAddress, password } = data;\n\t\tconst userData = user.singIn(emailAddress, password);\n\t\tif (userData) {\n\t\t\tconst { isAdmin } = userData;\n\t\t\ttokenService.setToken(userData)!;\n\n\t\t\tif (isAdmin) {\n\t\t\t\thistory.push('/admin/dashboard');\n\t\t\t} else {\n\t\t\t\thistory.push('/user/dashboard');\n\t\t\t}\n\t\t} else {\n\t\t\tsetErrors((prevState) => ({ ...prevState, emailAddress: 'Email or password is invalid!' }));\n\t\t}\n\t};\n\n\tconst { values, errors, setErrors, handleChange, handleSubmit } = useForm({\n\t\tinitialValues,\n\t\tinitialErrors,\n\t\tvalidate,\n\t\tonCallback,\n\t});\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} noValidate>\n\t\t\t<FormInput\n\t\t\t\tpill\n\t\t\t\tlabel=\"Email\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"emailAddress\"\n\t\t\t\tplaceholder=\"mail@website.com\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={values.emailAddress}\n\t\t\t\tmessage={errors.emailAddress}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<FormInput\n\t\t\t\tpill\n\t\t\t\tlabel=\"Password\"\n\t\t\t\ttype=\"password\"\n\t\t\t\tname=\"password\"\n\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={values.password}\n\t\t\t\tmessage={errors.password}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<Button pill block type=\"submit\">\n\t\t\t\tSign In\n\t\t\t</Button>\n\t\t</form>\n\t);\n};\n\nexport const initialValues = { emailAddress: '', password: '' };\nexport const initialErrors: Record<keyof typeof initialValues, string | null> = { emailAddress: null, password: null };\n","export const navItems = [\n\t{ name: 'Dashboard', slug: '/admin/dashboard' },\n\t{ name: 'Quizzes', slug: '/admin/quiz/all' },\n\t{ name: 'Add New Quiz', slug: '/admin/quiz/add-new' },\n\t{ name: 'Members', slug: '/admin/member/all' },\n\t{ name: 'Add New Member', slug: '/admin/member/add-new' },\n];\n","import { FC } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { tokenService } from 'service';\nimport styled from 'styled-components';\nimport { navItems } from 'utils/constants';\n\nexport const LeftNavbar: FC = () => {\n\tconst history = useHistory();\n\n\tconst handleSignOut = () => {\n\t\ttokenService.removeToken();\n\t\thistory.push('/');\n\t};\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<ul className=\"Navbar\">\n\t\t\t\t{navItems.map(({ name, slug }, i) => (\n\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t<NavLink to={slug} activeClassName=\"active\">\n\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t\t<li>\n\t\t\t\t\t<button onClick={handleSignOut}>Sign out</button>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</Wrapper>\n\t);\n};\n\nconst Wrapper = styled.div`\n\twidth: calc(100% + 1.5rem);\n\tmin-height: 100vh;\n\tpadding: 0.75rem;\n\tmargin-left: -0.75rem;\n\tbackground-color: var(--bs-gray-200);\n\n\t.Navbar {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\n\t\tli {\n\t\t\twidth: 100%;\n\t\t\tlist-style: none;\n\t\t\tdisplay: block;\n\n\t\t\ta,\n\t\t\tbutton {\n\t\t\t\tfont-size: 1rem;\n\t\t\t\tfont-weight: 500;\n\t\t\t\tpadding: 0.5rem 0;\n\t\t\t\tcolor: var(--bs-secondary);\n\t\t\t\twidth: 100%;\n\t\t\t\tdisplay: block;\n\t\t\t\ttext-align: left;\n\t\t\t\ttext-decoration: none;\n\t\t\t\tborder: none;\n\t\t\t\tbox-shadow: none;\n\t\t\t\tbackground-color: transparent;\n\n\t\t\t\t&.active {\n\t\t\t\t\tcolor: var(--bs-primary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n","import { FC } from 'react';\nimport { LeftNavbar } from './LeftNavbar';\n\nexport const AdminLayout: FC = ({ children }) => {\n\treturn (\n\t\t<div className=\"container-fluid\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-3\">\n\t\t\t\t\t<LeftNavbar />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-md-9\">{children}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { Button } from 'components/atoms';\nimport { FC } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { tokenService } from 'service';\n\nexport const Topbar: FC = () => {\n\tconst { name } = tokenService.getToken()!;\n\tconst history = useHistory();\n\n\tconst handleSignOut = () => {\n\t\ttokenService.removeToken();\n\t\thistory.push('/');\n\t};\n\n\treturn (\n\t\t<div className=\"d-block pt-3 pb-3 mb-3\" style={{ backgroundColor: '#e3f2fd' }}>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row align-items-center\">\n\t\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t\t<h4 className=\"mb-0\">{name}</h4>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-6 text-right\">\n\t\t\t\t\t\t<Button pill variant=\"danger\" className=\"d-block ms-auto\" onClick={handleSignOut}>\n\t\t\t\t\t\t\tSing out\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { FC, Fragment } from 'react';\nimport { Topbar } from './Topbar';\n\nexport const UserLayout: FC = ({ children }) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Topbar />\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col\">{children}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n","import { FC, SVGAttributes } from 'react';\r\n\r\nexport const Icon: FC<IconProps> = ({ path, ...rest }) => (\r\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" {...rest}>\r\n\t\t<path d={path} />\r\n\t</svg>\r\n);\r\n\r\nexport interface IconProps extends SVGAttributes<SVGElement> {\r\n\tpath: string;\r\n}\r\n\r\nIcon.defaultProps = {\r\n\twidth: 24,\r\n\theight: 24,\r\n\tfill: 'var(--bs-light-gray)',\r\n};\r\n","import { Icon, IconProps } from './Icon';\r\nexport default Icon;\r\nexport type { IconProps };\r\n\r\nexport const eyeOpen =\r\n\t'M12 3c5.392 0 9.878 3.88 10.819 9-.94 5.12-5.427 9-10.819 9-5.392 0-9.878-3.88-10.819-9C2.121 6.88 6.608 3 12 3zm0 16a9.005 9.005 0 0 0 8.777-7 9.005 9.005 0 0 0-17.554 0A9.005 9.005 0 0 0 12 19zm0-2.5a4.5 4.5 0 1 1 0-9 4.5 4.5 0 0 1 0 9zm0-2a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z';\r\n\r\nexport const deleteBin =\r\n\t'M17 6h5v2h-2v13a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V8H2V6h5V3a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3zm1 2H6v12h12V8zm-9 3h2v6H9v-6zm4 0h2v6h-2v-6zM9 4v2h6V4H9z';\r\n\r\nexport const pencil =\r\n\t'M15.728 9.686l-1.414-1.414L5 17.586V19h1.414l9.314-9.314zm1.414-1.414l1.414-1.414-1.414-1.414-1.414 1.414 1.414 1.414zM7.242 21H3v-4.243L16.435 3.322a1 1 0 0 1 1.414 0l2.829 2.829a1 1 0 0 1 0 1.414L7.243 21z';\r\n","import { Button as Btn, ButtonProps } from 'components/atoms';\r\nimport Icon, { IconProps } from 'libs/icons';\r\nimport { FC } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const IconButton: FC<IconButtonProps> = ({ path, width, height, fill, isCount, count, children, ...rest }) => {\r\n\tconst iconProps = { path, width, height, fill };\r\n\r\n\treturn (\r\n\t\t<Button {...rest}>\r\n\t\t\t<Icon {...iconProps} /> {children}\r\n\t\t\t{isCount && <Count>{count}</Count>}\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nexport interface IconButtonProps extends ButtonProps, Pick<IconProps, 'path' | 'width' | 'height' | 'fill'> {\r\n\tisCount?: boolean;\r\n\tcount?: number;\r\n}\r\n\r\nIconButton.defaultProps = {\r\n\tvariant: 'link',\r\n\tisCount: false,\r\n\tcount: 0,\r\n};\r\n\r\nconst Button = styled(Btn)`\r\n\tpadding: 0;\r\n\tposition: relative;\r\n`;\r\n\r\nconst Count = styled.span`\r\n\twidth: 1rem;\r\n\theight: 1rem;\r\n\tfont-size: 0.625rem;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tborder-radius: 50rem;\r\n\tposition: absolute;\r\n\ttop: -3px;\r\n\tright: -3px;\r\n\tcolor: var(--white);\r\n\tbackground-color: var(--primary);\r\n`;\r\n","import { Button } from 'components/atoms';\nimport { UserLayout } from 'components/organisms';\nimport { IQuiz, quiz, userAnswers } from 'libs/api';\nimport { FC, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { tokenService } from 'service';\nimport styled from 'styled-components';\n\nexport const UserDashboard: FC = () => {\n\tconst [data, setData] = useState<IQuiz[]>([]);\n\tconst history = useHistory();\n\tconst { id } = tokenService.getToken()!;\n\n\tuseEffect(() => {\n\t\tsetData(quiz.findAll());\n\t}, []);\n\n\tconst getReplyCount = (quizID: string) => {\n\t\tconst answers = userAnswers.getAnswersForUser(quizID, id);\n\t\tif (!answers) return 0;\n\t\treturn answers.answer.length;\n\t};\n\n\treturn (\n\t\t<UserLayout>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-8 offset-md-2\">\n\t\t\t\t\t<table className=\"table\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th style={{ width: '80%' }}>Question</th>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{data?.length > 0 ? (\n\t\t\t\t\t\t\t\tdata.map(({ id, title }, i) => (\n\t\t\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t\t\t<td>{title}</td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tpill\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"d-block ms-auto\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => history.push(`/user/quiz/${id}`)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tReply <Badge>{getReplyCount(id)}</Badge>\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td colSpan={3}>\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">No data found!</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</UserLayout>\n\t);\n};\n\nconst Badge = styled.span`\n\tfont-size: 0.75rem;\n\twidth: 1rem;\n\theight: 1rem;\n\ttext-align: center;\n\tborder-radius: 100%;\n\tdisplay: inline-block;\n\tcolor: var(--bs-primary);\n\tbackground-color: var(--bs-white);\n`;\n","import { SigninForm } from 'components/organisms';\nimport { FC } from 'react';\nimport styled from 'styled-components';\n\nexport const UserSignin: FC = () => {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-4 offset-md-4\">\n\t\t\t\t\t<FormWrapper>\n\t\t\t\t\t\t<div className=\"w-100 d-block\">\n\t\t\t\t\t\t\t<h2>Sign in</h2>\n\t\t\t\t\t\t\t<h6 className=\"text-secondary mb-5\">See your growth by answering the questions!</h6>\n\t\t\t\t\t\t\t<SigninForm />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</FormWrapper>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const FormWrapper = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n\tmax-width: 22.25rem;\n\tmin-height: 100vh;\n`;\n","import {\n\tAddMember,\n\tAddQuiz,\n\tAllMembers,\n\tAllQuizzes,\n\tDashboard,\n\tEditQuiz,\n\tSingleQuiz,\n\tUserDashboard,\n\tUserSignin,\n\tUserSingleQuiz,\n} from 'components/templates';\n\nexport const routeList = [\n\t{ type: 'public', exact: true, path: '/', component: UserSignin },\n\t{ type: 'admin', exact: true, path: '/admin/dashboard', component: Dashboard },\n\t{ type: 'admin', exact: true, path: '/admin/quiz/all', component: AllQuizzes },\n\t{ type: 'admin', exact: true, path: '/admin/quiz/add-new', component: AddQuiz },\n\t{ type: 'admin', exact: true, path: '/admin/quiz/edit/:id', component: EditQuiz },\n\t{ type: 'admin', exact: true, path: '/admin/quiz/:id', component: SingleQuiz },\n\t{ type: 'admin', exact: true, path: '/admin/member/all', component: AllMembers },\n\t{ type: 'admin', exact: true, path: '/admin/member/add-new', component: AddMember },\n\t{ type: 'user', exact: true, path: '/user/dashboard', component: UserDashboard },\n\t{ type: 'user', exact: true, path: '/user/quiz/:id', component: UserSingleQuiz },\n];\n","import { AdminLayout } from 'components/organisms';\nimport { quiz, user } from 'libs/api';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Dashboard: FC = () => {\n\tconst quizCount = () => {\n\t\tconst quizzes = quiz.findAll();\n\t\tif (!quizzes) return 0;\n\t\treturn quizzes.length;\n\t};\n\n\tconst memberCount = () => {\n\t\tconst members = user.findAll();\n\t\tif (!members) return 0;\n\t\treturn members.length;\n\t};\n\n\treturn (\n\t\t<AdminLayout>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-10\">\n\t\t\t\t\t<div className=\"w-100 mt-3\">\n\t\t\t\t\t\t<h2 className=\"mb-5\">Dashboard</h2>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t\t\t<div className=\"card-body text-center\">\n\t\t\t\t\t\t\t\t\t\t<h4>Total Quizzes</h4>\n\t\t\t\t\t\t\t\t\t\t<h1>{quizCount()}</h1>\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/admin/quiz/all\">Go to Quizzes</Link>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t\t\t<div className=\"card-body text-center\">\n\t\t\t\t\t\t\t\t\t\t<h4>Total Members</h4>\n\t\t\t\t\t\t\t\t\t\t<h1>{memberCount()}</h1>\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/admin/member/all\">Go to Members</Link>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</AdminLayout>\n\t);\n};\n","import { IconButton } from 'components/molecules';\nimport { AdminLayout } from 'components/organisms';\nimport { IQuiz, quiz, userAnswers } from 'libs/api';\nimport { deleteBin, eyeOpen, pencil } from 'libs/icons';\nimport { FC, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport const AllQuizzes: FC = () => {\n\tconst [data, setData] = useState<IQuiz[]>([]);\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tsetData(quiz.findAll());\n\t}, []);\n\n\tconst handleDelete = (id: string) => {\n\t\tquiz.delete(id);\n\t\tsetData((prevState) => [...prevState.filter((e) => e.id !== id)]);\n\t};\n\n\tconst getQuizReplyCount = (id: string) => {\n\t\tconst answers = userAnswers.getAnswers(id);\n\t\tif (!answers) return 0;\n\t\treturn answers.answer.length;\n\t};\n\n\treturn (\n\t\t<AdminLayout>\n\t\t\t<div className=\"w-100 mt-3\">\n\t\t\t\t<h2 className=\"mb-5\">Quizzes</h2>\n\n\t\t\t\t<table className=\"table\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th style={{ width: '35%' }}>Question</th>\n\t\t\t\t\t\t\t<th style={{ width: '35%' }}>Answer</th>\n\t\t\t\t\t\t\t<th className=\"text-center\" style={{ width: '10%' }}>\n\t\t\t\t\t\t\t\tReply\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{data?.length > 0 ? (\n\t\t\t\t\t\t\tdata.map(({ id, title, answer }, i) => (\n\t\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t\t<td>{title}</td>\n\t\t\t\t\t\t\t\t\t<td>{answer}</td>\n\t\t\t\t\t\t\t\t\t<td className=\"text-center\">{getQuizReplyCount(id)}</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-evenly\">\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\tpath={eyeOpen}\n\t\t\t\t\t\t\t\t\t\t\t\tfill=\"var(--bs-success)\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => history.push(`/admin/quiz/${id}`)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\tpath={pencil}\n\t\t\t\t\t\t\t\t\t\t\t\tfill=\"var(--bs-primary)\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => history.push(`/admin/quiz/edit/${id}`)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\tpath={deleteBin}\n\t\t\t\t\t\t\t\t\t\t\t\tfill=\"var(--bs-danger)\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleDelete(id)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td colSpan={3}>\n\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">No data found!</span>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</AdminLayout>\n\t);\n};\n","import { AdminLayout, QuestionForm } from 'components/organisms';\nimport { FC } from 'react';\n\nexport const AddQuiz: FC = () => {\n\treturn (\n\t\t<AdminLayout>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-5\">\n\t\t\t\t\t<div className=\"w-100 mt-3\">\n\t\t\t\t\t\t<h2>Add New Quiz</h2>\n\t\t\t\t\t\t<h6 className=\"text-secondary mb-5\">Please add your question &amp; answer over here!</h6>\n\t\t\t\t\t\t<QuestionForm />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</AdminLayout>\n\t);\n};\n","import { AdminLayout, QuestionForm } from 'components/organisms';\nimport { quiz } from 'libs/api';\nimport { FC } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const EditQuiz: FC = () => {\n\tconst { id } = useParams() as { id: string };\n\n\tconst quizByID = quiz.findOne(id);\n\n\treturn (\n\t\t<AdminLayout>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-5\">\n\t\t\t\t\t<div className=\"w-100 mt-3\">\n\t\t\t\t\t\t<h2>Edit Quiz</h2>\n\t\t\t\t\t\t<h6 className=\"text-secondary mb-5\">Please edit your question &amp; answer over here!</h6>\n\t\t\t\t\t\t{quizByID ? (\n\t\t\t\t\t\t\t<QuestionForm isEdit {...quizByID} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<p className=\"text-danger\">Someting went wrong!</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</AdminLayout>\n\t);\n};\n","import { AdminLayout } from 'components/organisms';\nimport { quiz, user, userAnswers } from 'libs/api';\nimport { FC, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const SingleQuiz: FC = () => {\n\tconst { id } = useParams() as { id: string };\n\n\tconst answersByID = userAnswers.getAnswers(id);\n\tconst quizDetails = quiz.findOne(id);\n\n\tconst getUserNameByID = (id: string) => {\n\t\tconst userData = user.findOne(id);\n\t\tif (!user) return null;\n\t\treturn userData?.name;\n\t};\n\n\treturn (\n\t\t<AdminLayout>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col\">\n\t\t\t\t\t<div className=\"w-100 mt-3\">\n\t\t\t\t\t\t{quizDetails ? (\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<h2 className=\"mb-3\">{quizDetails.title}</h2>\n\t\t\t\t\t\t\t\t{answersByID && answersByID?.answer?.length > 0 ? (\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t{answersByID.answer.map(({ answer, userID }, i) => (\n\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\t\t\tanswer.trim().toLowerCase() ===\n\t\t\t\t\t\t\t\t\t\t\t\t\tquizDetails.answer.trim().toLowerCase()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'text-success fw-bold'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{answer} -{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t<small className=\"fw-normal text-secondary\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{getUserNameByID(userID)}\n\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<p className=\"text-danger\">No reply found!</p>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<p className=\"text-danger\">Someting went wrong</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</AdminLayout>\n\t);\n};\n","import { AdminLayout } from 'components/organisms';\nimport { IUser, user } from 'libs/api';\nimport { FC, useEffect, useState } from 'react';\n\nexport const AllMembers: FC = () => {\n\tconst [data, setData] = useState<IUser[]>([]);\n\n\tuseEffect(() => {\n\t\tsetData(user.findAll());\n\t}, []);\n\n\treturn (\n\t\t<AdminLayout>\n\t\t\t<div className=\"w-100 mt-3\">\n\t\t\t\t<h2 className=\"mb-5\">Members</h2>\n\n\t\t\t\t<table className=\"table\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th style={{ width: '40%' }}>Name</th>\n\t\t\t\t\t\t\t<th style={{ width: '40%' }}>Email</th>\n\t\t\t\t\t\t\t<th style={{ width: '20%' }}>Admin</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{data?.length > 0 ? (\n\t\t\t\t\t\t\tdata.map(({ name, emailAddress, isAdmin }, i) => (\n\t\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t\t<td>{name}</td>\n\t\t\t\t\t\t\t\t\t<td>{emailAddress}</td>\n\t\t\t\t\t\t\t\t\t<td>{isAdmin ? 'Yes' : 'No'}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td colSpan={3}>\n\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">No data found!</span>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</AdminLayout>\n\t);\n};\n","import { AdminLayout, RegisterForm } from 'components/organisms';\nimport { FC } from 'react';\n\nexport const AddMember: FC = () => {\n\treturn (\n\t\t<AdminLayout>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-5\">\n\t\t\t\t\t<div className=\"w-100 mt-3\">\n\t\t\t\t\t\t<h2>Add New Member</h2>\n\t\t\t\t\t\t<h6 className=\"text-secondary mb-5\">You can add new member!</h6>\n\t\t\t\t\t\t<RegisterForm />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</AdminLayout>\n\t);\n};\n","import { ReplyForm, UserLayout } from 'components/organisms';\nimport { quiz } from 'libs/api';\nimport { FC } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const UserSingleQuiz: FC = () => {\n\tconst { id } = useParams() as { id: string };\n\n\tconst getQuizByID = quiz.findOne(id);\n\n\treturn (\n\t\t<UserLayout>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-6 offset-md-3\">\n\t\t\t\t\t{getQuizByID ? <ReplyForm {...getQuizByID} /> : <p className=\"text-danger\">Someting went wrong!</p>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</UserLayout>\n\t);\n};\n","import { importData } from 'demo/importData';\r\nimport { FC, useEffect, useState } from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { AdminRoute, UserRoute } from 'routes';\r\nimport { routeList } from 'routes/constants';\r\n\r\nconst App: FC = () => {\r\n\tconst [start, setStart] = useState<number>(0);\r\n\r\n\tuseEffect(() => importData(start, setStart), [start]);\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Router>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t{routeList.map(({ type, ...rest }, i) =>\r\n\t\t\t\t\t\ttype === 'user' ? (\r\n\t\t\t\t\t\t\t<UserRoute key={i} {...rest} />\r\n\t\t\t\t\t\t) : type === 'admin' ? (\r\n\t\t\t\t\t\t\t<AdminRoute key={i} {...rest} />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Route key={i} {...rest} />\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Switch>\r\n\t\t\t</Router>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { quiz, user } from 'libs/api';\nimport { Dispatch, SetStateAction } from 'react';\nimport { dummyMembers, dummyQuizzes } from './constants';\n\nexport const importData = (id: number, setStart: Dispatch<SetStateAction<number>>) => {\n\tconst isData = localStorage.getItem('dummyData');\n\n\tif (isData !== 'YES') {\n\t\tif (dummyMembers[id]) user.create(dummyMembers[id]);\n\t\tif (dummyQuizzes[id]) {\n\t\t\tquiz.create(dummyQuizzes[id]);\n\t\t} else {\n\t\t\tlocalStorage.setItem('dummyData', 'YES');\n\t\t}\n\t\tsetStart(id + 1);\n\t}\n};\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\r\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n\t\t\tgetCLS(onPerfEntry);\r\n\t\t\tgetFID(onPerfEntry);\r\n\t\t\tgetFCP(onPerfEntry);\r\n\t\t\tgetLCP(onPerfEntry);\r\n\t\t\tgetTTFB(onPerfEntry);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import 'assets/scss/app.scss';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}