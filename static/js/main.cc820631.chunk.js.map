{"version":3,"sources":["components/atoms/utils.ts","components/atoms/Button/styles.ts","components/atoms/Button/index.tsx","components/atoms/Form/FormInput/styles.ts","components/atoms/Form/FormCheck/styles.ts","components/atoms/Form/FormCheck/index.tsx","components/atoms/Form/FormInput/index.tsx","libs/api/abstractions/storage.ts","utils/helpers/generator.helpers.ts","libs/api/databases/answers.db.ts","utils/helpers/validation.helpers.ts","libs/api/databases/quiz.db.ts","libs/api/databases/users.db.ts","libs/hooks/useForm.ts","service/token.service.ts","libs/validations/signin.validations.ts","components/organisms/Forms/SigninForm.tsx","libs/icons/Icon.tsx","components/organisms/Layouts/LeftNavbar.tsx","libs/icons/index.ts","components/molecules/Button/IconButton.tsx","components/templates/UserSignin.tsx","components/templates/GeneralUser/Dashboard.tsx","demo/constants.ts","App.tsx","demo/importData.ts","reportWebVitals.ts","index.tsx"],"names":["getThemeColor","color","Wrapper","styled","button","size","css","block","variant","outline","pill","Button","children","rest","defaultProps","FormGroup","div","FormLabel","label","srOnly","required","FormControl","input","invalid","FormFeedback","p","rounded","FormCheck","message","className","style","groupProps","FormInput","props","labelProps","controlProps","DB","databaseName","this","key","value","localStorage","setItem","JSON","stringify","get","getItem","parse","result","includes","push","removeItem","IDGenerator","quizID","userID","answers","filtered","answer","filter","getAnswers","answerDoc","set","getAnswersForUser","Date","now","toString","isEmailAddress","email","test","String","toLowerCase","quiz","id","getAll","found","findOne","Object","assign","Error","remove","user","findAll","find","e","emailAddress","password","useForm","initialValues","initialErrors","validate","onCallback","useState","values","setValues","errors","setErrors","handleChange","target","name","type","errorsData","prevState","checked","handleSubmit","preventDefault","obj","isNullProperties","tokenService","token","signinValidations","keys","length","trim","SigninForm","history","useHistory","data","userData","singIn","isAdmin","setToken","onSubmit","noValidate","placeholder","onChange","Icon","path","xmlns","viewBox","d","width","height","fill","IconButton","isCount","count","iconProps","Count","Btn","span","UserSignin","FormWrapper","dummyQuizzes","title","dummyMembers","App","start","setStart","useEffect","create","importData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc820631.chunk.js","sourcesContent":["import { Colors } from './interfaces';\r\n\r\nexport const getThemeColor = (color: Colors): string => `var(--bs-${color})`;\r\n","/* eslint-disable indent */\r\nimport styled, { css } from 'styled-components';\r\nimport { ButtonProps } from '.';\r\nimport { getThemeColor } from '../utils';\r\n\r\nexport const Wrapper = styled.button<ButtonProps>`\r\n\ttext-align: center;\r\n\tborder: 1px solid transparent;\r\n\t${({ size }) => {\r\n\t\tswitch (size) {\r\n\t\t\tcase 'sm':\r\n\t\t\t\treturn css`\r\n\t\t\t\t\tpadding: 0.156rem 0.75rem;\r\n\t\t\t\t`;\r\n\r\n\t\t\tcase 'lg':\r\n\t\t\t\treturn css`\r\n\t\t\t\t\tpadding: 0.688rem 0.75rem;\r\n\t\t\t\t`;\r\n\r\n\t\t\tcase 'xl':\r\n\t\t\t\treturn css`\r\n\t\t\t\t\tpadding: 0.907rem 0.75rem;\r\n\t\t\t\t`;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn css`\r\n\t\t\t\t\tpadding: 0.532rem 0.75rem;\r\n\t\t\t\t`;\r\n\t\t}\r\n\t}}\r\n\t${({ block }) => {\r\n\t\tif (block) {\r\n\t\t\treturn css`\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t`;\r\n\t\t} else {\r\n\t\t\treturn css`\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t`;\r\n\t\t}\r\n\t}};\r\n\t${({ variant, outline }) => {\r\n\t\tswitch (variant) {\r\n\t\t\tcase 'link':\r\n\t\t\t\treturn css`\r\n\t\t\t\t\tcolor: ${getThemeColor('primary')};\r\n\t\t\t\t\tborder-color: transparent;\r\n\t\t\t\t\tbackground-color: transparent;\r\n\t\t\t\t`;\r\n\r\n\t\t\tcase 'light':\r\n\t\t\t\treturn css`\r\n\t\t\t\t\tcolor: ${getThemeColor('dark')};\r\n\t\t\t\t`;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tif (outline) {\r\n\t\t\t\t\treturn css`\r\n\t\t\t\t\t\tcolor: ${getThemeColor(variant!)};\r\n\t\t\t\t\t\tborder-color: ${getThemeColor(variant!)};\r\n\t\t\t\t\t\tbackground-color: transparent;\r\n\t\t\t\t\t`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn css`\r\n\t\t\t\t\t\tcolor: ${getThemeColor('white')};\r\n\t\t\t\t\t\tborder-color: ${getThemeColor(variant!)};\r\n\t\t\t\t\t\tbackground-color: ${getThemeColor(variant!)};\r\n\r\n\t\t\t\t\t\t&:hover {\r\n\t\t\t\t\t\t\topacity: 0.95;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t`;\r\n\t\t\t\t}\r\n\t\t}\r\n\t}};\r\n\tborder-radius: ${({ pill }) => (pill ? '50rem' : '0.25rem')};\r\n\ttransition: color 0.2s ease-in-out, background-color 0.2s ease-in-out, border-color 0.2s ease-in-out,\r\n\t\topacity 0.2s ease-in-out;\r\n\r\n\t&:hover {\r\n\t\t${({ variant, outline }) => {\r\n\t\t\tif (outline && variant !== 'link') {\r\n\t\t\t\treturn css`\r\n\t\t\t\t\tcolor: ${getThemeColor('white')};\r\n\t\t\t\t\tbackground-color: ${getThemeColor(variant!)};\r\n\t\t\t\t`;\r\n\t\t\t} else {\r\n\t\t\t\treturn css`\r\n\t\t\t\t\topacity: 0.95;\r\n\t\t\t\t`;\r\n\t\t\t}\r\n\t\t}}\r\n\t}\r\n\r\n\t&:disabled {\r\n\t\topacity: 0.65;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n`;\r\n","import { ButtonHTMLAttributes, FC } from 'react';\r\nimport { ButtonVariant, ElementBorders, ElementSize } from '../interfaces';\r\nimport { Wrapper } from './styles';\r\n\r\nexport const Button: FC<ButtonProps> = ({ children, ...rest }) => <Wrapper {...rest}>{children}</Wrapper>;\r\n\r\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement>, Pick<ElementBorders, 'pill'> {\r\n\tvariant?: ButtonVariant;\r\n\tblock?: boolean;\r\n\toutline?: boolean;\r\n\tsize?: Exclude<ElementSize, 'md'>;\r\n}\r\n\r\nButton.defaultProps = {\r\n\tvariant: 'primary',\r\n\tpill: false,\r\n\tblock: false,\r\n\toutline: false,\r\n};\r\n","/* eslint-disable indent */\r\nimport styled, { css } from 'styled-components';\r\nimport { FormInputProps } from '.';\r\n\r\ninterface FormControlProps extends Pick<FormInputProps, 'pill' | 'required'> {\r\n\tinvalid?: boolean;\r\n}\r\n\r\nexport const FormGroup = styled.div`\r\n\tdisplay: block;\r\n\tmargin-bottom: 1rem;\r\n`;\r\n\r\nexport const FormLabel = styled.label<FormInputProps>`\r\n\tdisplay: inline-block;\r\n\tmargin-bottom: 0.25rem;\r\n\r\n\t${({ srOnly }) => {\r\n\t\tif (srOnly) {\r\n\t\t\treturn css`\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\twidth: 1px;\r\n\t\t\t\theight: 1px;\r\n\t\t\t\tpadding: 0;\r\n\t\t\t\toverflow: hidden;\r\n\t\t\t\tclip: rect(0, 0, 0, 0);\r\n\t\t\t\twhite-space: nowrap;\r\n\t\t\t\t-webkit-clip-path: inset(50%);\r\n\t\t\t\tclip-path: inset(50%);\r\n\t\t\t\tborder: 0;\r\n\t\t\t`;\r\n\t\t}\r\n\t}}\r\n\r\n\t&:after {\r\n\t\t${({ required }) => {\r\n\t\t\tif (required) {\r\n\t\t\t\treturn css`\r\n\t\t\t\t\tcontent: ' *';\r\n\t\t\t\t\tcolor: var(--bs-danger);\r\n\t\t\t\t`;\r\n\t\t\t}\r\n\t\t}}\r\n\t}\r\n`;\r\n\r\nexport const FormControl = styled.input<FormControlProps>`\r\n\twidth: 100%;\r\n\tdisplay: block;\r\n\tpadding: 0.532rem 1rem;\r\n\tborder: 1px solid var(--bs-border);\r\n\t${({ pill }) => {\r\n\t\tif (pill) {\r\n\t\t\treturn css`\r\n\t\t\t\tborder-radius: 50rem;\r\n\t\t\t`;\r\n\t\t} else {\r\n\t\t\treturn css`\r\n\t\t\t\tborder-radius: 0.25rem;\r\n\t\t\t`;\r\n\t\t}\r\n\t}}\r\n\ttransition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n\r\n\t&:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: var(--bs-primary);\r\n\t\tbox-shadow: 0 0 0 0.2rem rgba(0, 181, 91, 0.25);\r\n\t}\r\n\r\n\t&:disabled {\r\n\t\tpointer-events: none;\r\n\t\tfilter: none;\r\n\t\topacity: 0.5;\r\n\t}\r\n\r\n\t${({ invalid }) => {\r\n\t\tif (invalid) {\r\n\t\t\treturn css`\r\n\t\t\t\tborder-color: var(--bs-danger);\r\n\t\t\t\tbox-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);\r\n\r\n\t\t\t\t&:focus {\r\n\t\t\t\t\tborder-color: var(--bs-danger);\r\n\t\t\t\t\tbox-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);\r\n\t\t\t\t}\r\n\t\t\t`;\r\n\t\t}\r\n\t}}\r\n`;\r\n\r\nexport const FormFeedback = styled.p`\r\n\tcolor: var(--bs-danger);\r\n\tmargin-bottom: 0;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { FormCheckProps } from '.';\r\n\r\nexport const FormGroup = styled.div`\r\n\tdisplay: block;\r\n\tmin-height: 1.5rem;\r\n\tpadding-left: 1.5rem;\r\n\tmargin-bottom: 1rem;\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n\tdisplay: inline-block;\r\n\tmargin-bottom: 0;\r\n`;\r\n\r\nexport const FormControl = styled.input<Pick<FormCheckProps, 'rounded'>>`\r\n\tcursor: pointer;\r\n\twidth: 1rem;\r\n\theight: 1rem;\r\n\tfloat: left;\r\n\tmargin-top: 0.25rem;\r\n\tmargin-left: -1.5em;\r\n\tappearance: none;\r\n\tvertical-align: top;\r\n\tbackground-color: var(--bs-white);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: contain;\r\n\tborder: 1px solid rgba(0, 0, 0, 0.25);\r\n\tbackground-color: var(--bs-white);\r\n\tborder-radius: ${({ rounded }) => (rounded ? '0.25rem' : '100%')};\r\n\r\n\t&:checked {\r\n\t\t&[type='checkbox'],\r\n\t\t&[type='radio'] {\r\n\t\t\tborder-color: var(--bs-primary);\r\n\t\t\tbackground-color: var(--bs-primary);\r\n\t\t\tbackground-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10l3 3l6-6'/%3e%3c/svg%3e\");\r\n\t\t}\r\n\r\n\t\t&[type='radio'] {\r\n\t\t\tbackground-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='%23fff'/%3e%3c/svg%3e\");\r\n\t\t}\r\n\t}\r\n\r\n\t&:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: var(--bs-primary);\r\n\t\tbox-shadow: 0 0 0 0.2rem rgba(0, 181, 91, 0.25);\r\n\t}\r\n\r\n\t&:disabled {\r\n\t\tpointer-events: none;\r\n\t\tfilter: none;\r\n\t\topacity: 0.5;\r\n\r\n\t\t& ~ ${FormLabel} {\r\n\t\t\topacity: 0.5;\r\n\t\t}\r\n\t}\r\n`;\r\n","import { FC, InputHTMLAttributes, ReactNode } from 'react';\r\nimport { ElementBorders } from '../../interfaces';\r\nimport { FormFeedback } from '../FormInput/styles';\r\nimport { FormControl, FormGroup, FormLabel } from './styles';\r\n\r\nexport const FormCheck: FC<FormCheckProps> = ({ label, message, className, style, ...rest }) => {\r\n\tconst groupProps = { className, style };\r\n\r\n\treturn (\r\n\t\t<FormGroup {...groupProps}>\r\n\t\t\t<FormControl {...rest} />\r\n\t\t\t<FormLabel>{label}</FormLabel>\r\n\t\t\t{rest.required && <FormFeedback>{message}</FormFeedback>}\r\n\t\t</FormGroup>\r\n\t);\r\n};\r\n\r\nexport interface FormCheckProps extends InputHTMLAttributes<HTMLInputElement>, Pick<ElementBorders, 'rounded'> {\r\n\ttype: 'checkbox' | 'radio';\r\n\tlabel?: ReactNode;\r\n\tmessage?: string;\r\n}\r\n\r\nFormCheck.defaultProps = {\r\n\trounded: false,\r\n\tlabel: '',\r\n};\r\n","import { ElementType, FC, InputHTMLAttributes, TextareaHTMLAttributes } from 'react';\r\nimport { ElementBorders } from '../../interfaces';\r\nimport { FormControl, FormFeedback, FormGroup, FormLabel } from './styles';\r\n\r\nexport const FormInput: FC<FormInputProps> = (props) => {\r\n\tconst { label, srOnly, message, className, style, required, ...rest } = props;\r\n\tconst groupProps = { className, style };\r\n\tconst labelProps = { required, srOnly, children: label };\r\n\tconst controlProps = { invalid: !!(required && message), required, ...rest };\r\n\r\n\treturn (\r\n\t\t<FormGroup {...groupProps}>\r\n\t\t\t<FormLabel {...labelProps} />\r\n\t\t\t<FormControl {...controlProps} />\r\n\t\t\t{required && <FormFeedback>{message}</FormFeedback>}\r\n\t\t</FormGroup>\r\n\t);\r\n};\r\n\r\nexport interface FormInputProps\r\n\textends InputHTMLAttributes<HTMLInputElement>,\r\n\t\tPick<TextareaHTMLAttributes<HTMLTextAreaElement>, 'cols' | 'rows'>,\r\n\t\tPick<ElementBorders, 'pill'> {\r\n\tas?: ElementType;\r\n\tlabel?: string;\r\n\tsrOnly?: boolean;\r\n\tmessage?: string | null;\r\n}\r\n\r\nFormInput.defaultProps = {\r\n\tsrOnly: false,\r\n};\r\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nexport class DB<T> {\r\n\tprivate databaseName: string;\r\n\r\n\tconstructor(databaseName: string) {\r\n\t\tthis.databaseName = databaseName;\r\n\t}\r\n\r\n\tprotected set(key: string, value: T) {\r\n\t\tlocalStorage.setItem(`${this.databaseName}_${key}`, JSON.stringify(value));\r\n\t\treturn this.get(key)!;\r\n\t}\r\n\r\n\tprotected get(key: string): T | null {\r\n\t\tconst value = localStorage.getItem(`${this.databaseName}_${key}`);\r\n\t\tif (!value) return null;\r\n\t\treturn JSON.parse(value);\r\n\t}\r\n\r\n\tprotected getAll(): T[] {\r\n\t\tconst result = [];\r\n\t\tfor (const key in localStorage) {\r\n\t\t\tif (key.includes(`${this.databaseName}_`)) {\r\n\t\t\t\tconst value = localStorage.getItem(key)!;\r\n\t\t\t\tresult.push(JSON.parse(value));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected remove(key: string) {\r\n\t\tlocalStorage.removeItem(`${this.databaseName}_${key}`);\r\n\t}\r\n}\r\n","export const IDGenerator = () => Date.now().toString();\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport { DB } from '../abstractions/storage';\r\n\r\ninterface Answer {\r\n\tanswer: string;\r\n\tuserID: string;\r\n}\r\n\r\nexport interface IQuizAnswer {\r\n\tquizID: string;\r\n\tanswer: Answer[];\r\n}\r\n\r\nclass UserAnswers extends DB<IQuizAnswer> {\r\n\tconstructor() {\r\n\t\tsuper('user_answers');\r\n\t}\r\n\r\n\t/**\r\n\t * ### Consumed By Admin\r\n\t * */\r\n\tgetAnswers(quizID: string) {\r\n\t\treturn this.get(quizID);\r\n\t}\r\n\r\n\t/**\r\n\t * ### Consumed By User\r\n\t * */\r\n\tgetAnswersForUser(quizID: string, userID: string): IQuizAnswer | null {\r\n\t\tconst answers = this.get(quizID);\r\n\t\tif (answers) {\r\n\t\t\tconst filtered = answers.answer.filter((answer) => answer.userID === userID);\r\n\t\t\treturn {\r\n\t\t\t\t...answers,\r\n\t\t\t\tanswer: filtered,\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * ### Consumed By User\r\n\t * */\r\n\tcreateAnswer(quizID: string, answer: Answer) {\r\n\t\tconst answers = this.getAnswers(quizID);\r\n\t\tif (!answers) {\r\n\t\t\tconst answerDoc: IQuizAnswer = { quizID, answer: [answer] };\r\n\t\t\tthis.set(quizID, answerDoc);\r\n\r\n\t\t\treturn this.getAnswersForUser(quizID, answer.userID)!;\r\n\t\t}\r\n\t\tanswers.answer.push(answer);\r\n\t\tthis.set(quizID, answers);\r\n\t\treturn this.getAnswersForUser(quizID, answer.userID)!;\r\n\t}\r\n}\r\n\r\nexport const userAnswers = new UserAnswers();\r\n","/**\r\n * Check whether is number or string\r\n * @param value\r\n * @returns\r\n */\r\nexport const isNumber = (value: string): boolean => {\r\n\treturn /^-?[\\d.]+(?:e-?\\d+)?$/.test(value);\r\n};\r\n\r\n/**\r\n * Check phone number is valid or NOT\r\n * @param number - pass phone number\r\n */\r\nexport const isPhoneNumber = (number: string): boolean => {\r\n\tconst regex = /^((01){1}[3-9]{1}\\d{8})$/;\r\n\treturn regex.test(number);\r\n};\r\n\r\n/**\r\n * Check email address is valid or NOT\r\n * @param email\r\n * @returns\r\n */\r\nexport const isEmailAddress = (email: string): boolean => {\r\n\tconst regex = /^([\\w\\.\\-]+)@([\\w\\-]+)((\\.(\\w){2,3})+)$/; // eslint-disable-line\r\n\treturn regex.test(String(email).toLowerCase());\r\n};\r\n\r\n/**\r\n * Check if all properties is NULL\r\n * @param obj\r\n * @returns\r\n */\r\nexport const isNullProperties = (obj: Record<string, any>): boolean => {\r\n\tfor (const key in obj) {\r\n\t\tif (obj[key] !== null && obj[key] !== '') return false;\r\n\t}\r\n\treturn true;\r\n};\r\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport { IDGenerator } from 'utils/helpers';\r\nimport { DB } from '../abstractions/storage';\r\n\r\nexport interface IQuiz {\r\n\tid: string;\r\n\ttitle: string;\r\n\tdescription?: string;\r\n\tanswer: string;\r\n}\r\n\r\nclass QuizDB extends DB<IQuiz> {\r\n\tconstructor() {\r\n\t\tsuper('quiz');\r\n\t}\r\n\r\n\tfindOne(id: string) {\r\n\t\treturn this.get(id);\r\n\t}\r\n\r\n\tfindAll() {\r\n\t\treturn this.getAll();\r\n\t}\r\n\r\n\tcreate(quiz: Omit<IQuiz, 'id'>) {\r\n\t\tconst id = IDGenerator();\r\n\t\treturn this.set(id, { ...quiz, id });\r\n\t}\r\n\r\n\tupdate(id: string, value: Partial<Omit<IQuiz, 'id'>>) {\r\n\t\tconst found = this.findOne(id);\r\n\t\tif (found) {\r\n\t\t\tthis.set(id, Object.assign(found, value));\r\n\t\t\treturn this.findOne(id)!;\r\n\t\t}\r\n\t\tthrow new Error('Quiz Not Found');\r\n\t}\r\n\r\n\tdelete(id: string) {\r\n\t\tthis.remove(id);\r\n\t}\r\n}\r\n\r\n/**\r\n * ### Used By Admin\r\n **/\r\nexport const quiz = new QuizDB();\r\n","import { IDGenerator } from 'utils/helpers';\r\nimport { DB } from '../abstractions/storage';\r\n\r\nexport interface IUser {\r\n\tid: string;\r\n\tname: string;\r\n\temailAddress: string;\r\n\tpassword: string;\r\n\tisAdmin: boolean;\r\n\t// avatarURL: string;\r\n}\r\n\r\nexport class UsersDB extends DB<IUser> {\r\n\tconstructor() {\r\n\t\tsuper('users');\r\n\t}\r\n\r\n\tfindAll() {\r\n\t\treturn this.getAll();\r\n\t}\r\n\r\n\tfindOne(id: string) {\r\n\t\treturn this.get(id);\r\n\t}\r\n\r\n\tcreate(user: Omit<IUser, 'id'>) {\r\n\t\tconst id = IDGenerator();\r\n\t\tconst users = this.findAll();\r\n\t\tconst isRegistered = users.find((e) => e.emailAddress === user.emailAddress);\r\n\t\tif (isRegistered) return null;\r\n\t\treturn this.set(id, { ...user, id });\r\n\t}\r\n\r\n\tsingIn(emailAddress: string, password: string) {\r\n\t\tconst users = this.findAll();\r\n\t\tconst user = users.find((e) => e.emailAddress === emailAddress && e.password === password);\r\n\t\tif (!user) return null;\r\n\t\tconst { password: omitPassword, ...rest } = user;\r\n\t\treturn rest;\r\n\t}\r\n}\r\n\r\nexport const user = new UsersDB();\r\n","import { ChangeEvent, Dispatch, FormEvent, SetStateAction, useState } from 'react';\r\nimport { isNullProperties } from 'utils/helpers';\r\n\r\nexport const useForm = <T, K>(props: PropsType<T, K>): ReturnType<T, K> => {\r\n\tconst { initialValues, initialErrors, validate, onCallback } = props;\r\n\tconst [values, setValues] = useState<T>(initialValues);\r\n\tconst [errors, setErrors] = useState<K>(initialErrors);\r\n\r\n\t/**\r\n\t * Change event handler for `HTMLInputElement` `HTMLSelectElement` `HTMLTextAreaElement`\r\n\t * @param e\r\n\t */\r\n\tconst handleChange = (e: ChangeEvent<FormElement>) => {\r\n\t\tconst { name, type, value } = e.target;\r\n\t\tconst errorsData = validate({ [name]: value } as any);\r\n\t\tsetErrors((prevState) => ({ ...prevState, ...errorsData }));\r\n\t\tif (type === 'checkbox') {\r\n\t\t\tconst { checked } = e.target as HTMLInputElement;\r\n\t\t\tsetValues((prevState) => ({ ...prevState, [name]: checked }));\r\n\t\t} else {\r\n\t\t\tsetValues((prevState) => ({ ...prevState, [name]: value }));\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Form event submit handler `Form`\r\n\t * @param e\r\n\t */\r\n\tconst handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n\t\te.preventDefault();\r\n\t\tconst errorsData = validate(values);\r\n\t\tsetErrors((prevState) => ({ ...prevState, ...errorsData }));\r\n\t\tif (isNullProperties(errorsData)) onCallback(values);\r\n\t};\r\n\r\n\treturn {\r\n\t\tvalues,\r\n\t\terrors,\r\n\t\tsetValues,\r\n\t\tsetErrors,\r\n\t\thandleChange,\r\n\t\thandleSubmit,\r\n\t};\r\n};\r\n\r\ntype PropsType<T, K> = {\r\n\tinitialValues: T;\r\n\tinitialErrors: K;\r\n\tvalidate: (values: Partial<T>) => Partial<K>;\r\n\tonCallback: (values: T) => void;\r\n};\r\n\r\ntype ReturnType<T, K> = {\r\n\tvalues: T;\r\n\terrors: K;\r\n\tsetValues: Dispatch<SetStateAction<T>>;\r\n\tsetErrors: Dispatch<SetStateAction<K>>;\r\n\thandleChange: (e: ChangeEvent<FormElement>) => void;\r\n\thandleSubmit: (e: FormEvent<HTMLFormElement>) => void;\r\n};\r\n\r\ntype FormElement = HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n","import { IUser } from 'libs/api';\n\nexport type IUserToken = Omit<IUser, 'password'>;\n\nclass TokenService {\n\tgetToken(): IUserToken | null {\n\t\tconst token = localStorage.getItem('token');\n\t\tif (!token) return null;\n\t\treturn JSON.parse(token);\n\t}\n\n\tsetToken(value: IUserToken) {\n\t\tlocalStorage.setItem('token', JSON.stringify(value));\n\t}\n\n\tremoveToken() {\n\t\tlocalStorage.removeItem('token');\n\t}\n}\n\nexport const tokenService = new TokenService();\n","/* eslint-disable indent */\nimport { initialErrors, initialValues } from 'components/organisms/Forms/SigninForm';\nimport { isEmailAddress } from 'utils/helpers';\n\nexport const signinValidations = (values: Partial<typeof initialValues>): Partial<typeof initialErrors> => {\n\tconst errors: Partial<typeof initialErrors> = {};\n\n\tif (values && Object.keys(values).length > 0) {\n\t\tlet key: keyof typeof values;\n\t\tfor (key in values) {\n\t\t\tconst value = values[key]?.trim();\n\n\t\t\tswitch (key) {\n\t\t\t\tcase 'emailAddress':\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\terrors['emailAddress'] = 'Email address is required';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!isEmailAddress(value)) {\n\t\t\t\t\t\t\terrors['emailAddress'] = 'Email address is invalid';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\terrors['emailAddress'] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'password':\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\terrors['password'] = 'Password is required';\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors['password'] = null;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn errors;\n};\n","import { Button, FormInput } from 'components/atoms';\nimport { user } from 'libs/api';\nimport { useForm } from 'libs/hooks';\nimport { signinValidations as validate } from 'libs/validations';\nimport { FC } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { tokenService } from 'service';\n\nexport const SigninForm: FC = () => {\n\tconst history = useHistory();\n\n\tconst onCallback = (data: typeof initialValues) => {\n\t\tconst { emailAddress, password } = data;\n\t\tconst userData = user.singIn(emailAddress, password);\n\t\tif (userData) {\n\t\t\tconst { isAdmin } = userData;\n\t\t\ttokenService.setToken(userData)!;\n\n\t\t\tif (isAdmin) {\n\t\t\t\thistory.push('/admin/dashboard');\n\t\t\t} else {\n\t\t\t\thistory.push('/user/dashboard');\n\t\t\t}\n\t\t} else {\n\t\t\tsetErrors((prevState) => ({ ...prevState, emailAddress: 'Email or password is invalid!' }));\n\t\t}\n\t};\n\n\tconst { values, errors, setErrors, handleChange, handleSubmit } = useForm({\n\t\tinitialValues,\n\t\tinitialErrors,\n\t\tvalidate,\n\t\tonCallback,\n\t});\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} noValidate>\n\t\t\t<FormInput\n\t\t\t\tpill\n\t\t\t\tlabel=\"Email\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"emailAddress\"\n\t\t\t\tplaceholder=\"mail@website.com\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={values.emailAddress}\n\t\t\t\tmessage={errors.emailAddress}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<FormInput\n\t\t\t\tpill\n\t\t\t\tlabel=\"Password\"\n\t\t\t\ttype=\"password\"\n\t\t\t\tname=\"password\"\n\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={values.password}\n\t\t\t\tmessage={errors.password}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<Button pill block type=\"submit\">\n\t\t\t\tSign In\n\t\t\t</Button>\n\t\t</form>\n\t);\n};\n\nexport const initialValues = { emailAddress: '', password: '' };\nexport const initialErrors: Record<keyof typeof initialValues, string | null> = { emailAddress: null, password: null };\n","import { FC, SVGAttributes } from 'react';\r\n\r\nexport const Icon: FC<IconProps> = ({ path, ...rest }) => (\r\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" {...rest}>\r\n\t\t<path d={path} />\r\n\t</svg>\r\n);\r\n\r\nexport interface IconProps extends SVGAttributes<SVGElement> {\r\n\tpath: string;\r\n}\r\n\r\nIcon.defaultProps = {\r\n\twidth: 24,\r\n\theight: 24,\r\n\tfill: 'var(--bs-light-gray)',\r\n};\r\n","import { FC } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { tokenService } from 'service';\nimport styled from 'styled-components';\nimport { navItems } from 'utils/constants';\n\nexport const LeftNavbar: FC = () => {\n\tconst history = useHistory();\n\n\tconst handleSignOut = () => {\n\t\ttokenService.removeToken();\n\t\thistory.push('/');\n\t};\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<ul className=\"Navbar\">\n\t\t\t\t{navItems.map(({ name, slug }, i) => (\n\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t<NavLink to={slug} activeClassName=\"active\">\n\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t\t<li>\n\t\t\t\t\t<button onClick={handleSignOut}>Sign out</button>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</Wrapper>\n\t);\n};\n\nconst Wrapper = styled.div`\n\twidth: calc(100% + 1.5rem);\n\tmin-height: 100vh;\n\tpadding: 0.75rem;\n\tmargin-left: -0.75rem;\n\tbackground-color: var(--bs-gray-200);\n\n\t.Navbar {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\n\t\tli {\n\t\t\twidth: 100%;\n\t\t\tlist-style: none;\n\t\t\tdisplay: block;\n\n\t\t\ta,\n\t\t\tbutton {\n\t\t\t\tfont-size: 1rem;\n\t\t\t\tfont-weight: 500;\n\t\t\t\tpadding: 0.5rem 0;\n\t\t\t\tcolor: var(--bs-secondary);\n\t\t\t\twidth: 100%;\n\t\t\t\tdisplay: block;\n\t\t\t\ttext-align: left;\n\t\t\t\ttext-decoration: none;\n\t\t\t\tborder: none;\n\t\t\t\tbox-shadow: none;\n\t\t\t\tbackground-color: transparent;\n\n\t\t\t\t&.active {\n\t\t\t\t\tcolor: var(--bs-primary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n","import { Icon, IconProps } from './Icon';\r\nexport default Icon;\r\nexport type { IconProps };\r\n\r\nexport const eyeOpen =\r\n\t'M12 3c5.392 0 9.878 3.88 10.819 9-.94 5.12-5.427 9-10.819 9-5.392 0-9.878-3.88-10.819-9C2.121 6.88 6.608 3 12 3zm0 16a9.005 9.005 0 0 0 8.777-7 9.005 9.005 0 0 0-17.554 0A9.005 9.005 0 0 0 12 19zm0-2.5a4.5 4.5 0 1 1 0-9 4.5 4.5 0 0 1 0 9zm0-2a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z';\r\n\r\nexport const deleteBin =\r\n\t'M17 6h5v2h-2v13a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V8H2V6h5V3a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3zm1 2H6v12h12V8zm-9 3h2v6H9v-6zm4 0h2v6h-2v-6zM9 4v2h6V4H9z';\r\n\r\nexport const pencil =\r\n\t'M15.728 9.686l-1.414-1.414L5 17.586V19h1.414l9.314-9.314zm1.414-1.414l1.414-1.414-1.414-1.414-1.414 1.414 1.414 1.414zM7.242 21H3v-4.243L16.435 3.322a1 1 0 0 1 1.414 0l2.829 2.829a1 1 0 0 1 0 1.414L7.243 21z';\r\n","import { Button as Btn, ButtonProps } from 'components/atoms';\r\nimport Icon, { IconProps } from 'libs/icons';\r\nimport { FC } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const IconButton: FC<IconButtonProps> = ({ path, width, height, fill, isCount, count, children, ...rest }) => {\r\n\tconst iconProps = { path, width, height, fill };\r\n\r\n\treturn (\r\n\t\t<Button {...rest}>\r\n\t\t\t<Icon {...iconProps} /> {children}\r\n\t\t\t{isCount && <Count>{count}</Count>}\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nexport interface IconButtonProps extends ButtonProps, Pick<IconProps, 'path' | 'width' | 'height' | 'fill'> {\r\n\tisCount?: boolean;\r\n\tcount?: number;\r\n}\r\n\r\nIconButton.defaultProps = {\r\n\tvariant: 'link',\r\n\tisCount: false,\r\n\tcount: 0,\r\n};\r\n\r\nconst Button = styled(Btn)`\r\n\tpadding: 0;\r\n\tposition: relative;\r\n`;\r\n\r\nconst Count = styled.span`\r\n\twidth: 1rem;\r\n\theight: 1rem;\r\n\tfont-size: 0.625rem;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tborder-radius: 50rem;\r\n\tposition: absolute;\r\n\ttop: -3px;\r\n\tright: -3px;\r\n\tcolor: var(--white);\r\n\tbackground-color: var(--primary);\r\n`;\r\n","import { SigninForm } from 'components/organisms';\nimport { FC } from 'react';\nimport styled from 'styled-components';\n\nexport const UserSignin: FC = () => {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-4 offset-md-4\">\n\t\t\t\t\t<FormWrapper>\n\t\t\t\t\t\t<div className=\"w-100 d-block\">\n\t\t\t\t\t\t\t<h2>Sign in</h2>\n\t\t\t\t\t\t\t<h6 className=\"text-secondary mb-5\">See your growth by answering the questions!</h6>\n\t\t\t\t\t\t\t<SigninForm />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</FormWrapper>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const FormWrapper = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n\tmax-width: 22.25rem;\n\tmin-height: 100vh;\n`;\n","import { Button } from 'components/atoms';\nimport { UserLayout } from 'components/organisms';\nimport { IQuiz, quiz, userAnswers } from 'libs/api';\nimport { FC, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { tokenService } from 'service';\nimport styled from 'styled-components';\n\nexport const UserDashboard: FC = () => {\n\tconst [data, setData] = useState<IQuiz[]>([]);\n\tconst history = useHistory();\n\tconst { id } = tokenService.getToken()!;\n\n\tuseEffect(() => {\n\t\tsetData(quiz.findAll());\n\t}, []);\n\n\tconst getReplyCount = (quizID: string) => {\n\t\tconst answers = userAnswers.getAnswersForUser(quizID, id);\n\t\tif (!answers) return 0;\n\t\treturn answers.answer.length;\n\t};\n\n\treturn (\n\t\t<UserLayout>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-8 offset-md-2\">\n\t\t\t\t\t<table className=\"table\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th style={{ width: '80%' }}>Question</th>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{data?.length > 0 ? (\n\t\t\t\t\t\t\t\tdata.map(({ id, title }, i) => (\n\t\t\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t\t\t<td>{title}</td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tpill\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"d-block ms-auto\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => history.push(`/user/quiz/${id}`)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tReply <Badge>{getReplyCount(id)}</Badge>\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td colSpan={3}>\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">No data found!</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</UserLayout>\n\t);\n};\n\nconst Badge = styled.span`\n\tfont-size: 0.75rem;\n\twidth: 1rem;\n\theight: 1rem;\n\ttext-align: center;\n\tborder-radius: 100%;\n\tdisplay: inline-block;\n\tcolor: var(--bs-primary);\n\tbackground-color: var(--bs-white);\n`;\n","import { IQuiz, IUser } from 'libs/api';\n\nexport const dummyQuizzes: Omit<IQuiz, 'id'>[] = [\n\t{\n\t\ttitle: 'What is the capital of New Zealand?',\n\t\tanswer: 'Wellington',\n\t},\n\t{\n\t\ttitle: 'How many permanent teeth does a dog have?',\n\t\tanswer: '42',\n\t},\n\t{\n\t\ttitle: 'What is the name of the largest ocean on earth?',\n\t\tanswer: 'Pacific Ocean',\n\t},\n\t{\n\t\ttitle: 'What is the name of the biggest technology company in South Korea?',\n\t\tanswer: 'Samsung',\n\t},\n\t{\n\t\ttitle: 'What is the currency of Denmark?',\n\t\tanswer: 'Krone',\n\t},\n\t{\n\t\ttitle: 'What is the smallest planet in our solar system?',\n\t\tanswer: 'Mercury',\n\t},\n\t{\n\t\ttitle: 'What is the most sold flavour of Walker’s crisps?',\n\t\tanswer: 'Cheese and Onion',\n\t},\n\t{\n\t\ttitle: 'How long is an Olympic swimming pool (in meters)?',\n\t\tanswer: '50 meters',\n\t},\n];\n\nexport const dummyMembers: Omit<IUser, 'id'>[] = [\n\t{\n\t\tname: 'John Doe',\n\t\temailAddress: 'john@gmail.com',\n\t\tpassword: '12345678',\n\t\tisAdmin: true,\n\t},\n\t{\n\t\tname: 'Tara Black',\n\t\temailAddress: 'tara@gmail.com',\n\t\tpassword: '12345678',\n\t\tisAdmin: false,\n\t},\n\t{\n\t\tname: 'Mary Hart',\n\t\temailAddress: 'mary@gmail.com',\n\t\tpassword: '12345678',\n\t\tisAdmin: false,\n\t},\n];\n","import { UserSignin } from 'components/templates';\r\nimport { importData } from 'demo/importData';\r\nimport { FC, useEffect, useState } from 'react';\r\n\r\nconst App: FC = () => {\r\n\tconst [start, setStart] = useState<number>(0);\r\n\r\n\tuseEffect(() => importData(start, setStart), [start]);\r\n\r\n\treturn <UserSignin />;\r\n\r\n\t// return (\r\n\t// \t<Router>\r\n\t// \t\t<Switch>\r\n\t// \t\t\t{routeList.map(({ type, ...rest }, i) =>\r\n\t// \t\t\t\ttype === 'user' ? (\r\n\t// \t\t\t\t\t<UserRoute key={i} {...rest} />\r\n\t// \t\t\t\t) : type === 'admin' ? (\r\n\t// \t\t\t\t\t<AdminRoute key={i} {...rest} />\r\n\t// \t\t\t\t) : (\r\n\t// \t\t\t\t\t<Route key={i} {...rest} />\r\n\t// \t\t\t\t),\r\n\t// \t\t\t)}\r\n\t// \t\t</Switch>\r\n\t// \t</Router>\r\n\t// );\r\n};\r\n\r\nexport default App;\r\n","import { quiz, user } from 'libs/api';\nimport { Dispatch, SetStateAction } from 'react';\nimport { dummyMembers, dummyQuizzes } from './constants';\n\nexport const importData = (id: number, setStart: Dispatch<SetStateAction<number>>) => {\n\tconst isData = localStorage.getItem('dummyData');\n\n\tif (isData !== 'YES') {\n\t\tif (dummyMembers[id]) user.create(dummyMembers[id]);\n\t\tif (dummyQuizzes[id]) {\n\t\t\tquiz.create(dummyQuizzes[id]);\n\t\t} else {\n\t\t\tlocalStorage.setItem('dummyData', 'YES');\n\t\t}\n\t\tsetStart(id + 1);\n\t}\n};\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\r\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n\t\t\tgetCLS(onPerfEntry);\r\n\t\t\tgetFID(onPerfEntry);\r\n\t\t\tgetFCP(onPerfEntry);\r\n\t\t\tgetLCP(onPerfEntry);\r\n\t\t\tgetTTFB(onPerfEntry);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import 'assets/scss/app.scss';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}